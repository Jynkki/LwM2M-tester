{
    "basePath": "/appiot",
    "definitions": {
        "JsonPatch.JsonPatchDocument[Sigma.Sensation.DTO.DataCollector.DataCollectorTemplatePatch]": {
            "properties": {
                "HasOperations": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "Operations": {
                    "items": {
                        "$ref": "#/definitions/JsonPatch.JsonPatchOperation"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JsonPatch.JsonPatchDocument[Sigma.Sensation.DTO.DataCollector.DataCollectorTypePatch]": {
            "properties": {
                "HasOperations": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "Operations": {
                    "items": {
                        "$ref": "#/definitions/JsonPatch.JsonPatchOperation"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JsonPatch.JsonPatchDocument[Sigma.Sensation.DTO.Device.DevicePatch]": {
            "properties": {
                "HasOperations": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "Operations": {
                    "items": {
                        "$ref": "#/definitions/JsonPatch.JsonPatchOperation"
                    },
                    "readOnly": true,
                    "type": "array"
                }
            },
            "type": "object"
        },
        "JsonPatch.JsonPatchOperation": {
            "properties": {
                "FromPath": {
                    "type": "string"
                },
                "Operation": {
                    "enum": [
                        "add",
                        "remove",
                        "replace",
                        "move"
                    ],
                    "type": "string"
                },
                "ParsedFromPath": {
                    "items": {
                        "$ref": "#/definitions/JsonPatch.Paths.Components.PathComponent"
                    },
                    "type": "array"
                },
                "ParsedPath": {
                    "items": {
                        "$ref": "#/definitions/JsonPatch.Paths.Components.PathComponent"
                    },
                    "type": "array"
                },
                "Path": {
                    "type": "string"
                },
                "Value": {
                    "type": "object"
                }
            },
            "type": "object"
        },
        "JsonPatch.Paths.Components.PathComponent": {
            "properties": {
                "ComponentType": {
                    "type": "string"
                },
                "IsCollection": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ActivityLog.ActivityLogEntryResponse": {
            "properties": {
                "CorrelationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "CreatedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "Description": {
                    "type": "string"
                },
                "EntityId": {
                    "format": "uuid",
                    "type": "string"
                },
                "EntityIdentifier": {
                    "type": "string"
                },
                "EntityName": {
                    "type": "string"
                },
                "EntityType": {
                    "enum": [
                        "Gateway",
                        "Device",
                        "Resource",
                        "Multiple"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResponseCode": {
                    "type": "string"
                },
                "ResponseMessage": {
                    "type": "string"
                },
                "Status": {
                    "enum": [
                        "Pending",
                        "InProgress",
                        "Completed",
                        "Failed",
                        "Deleted"
                    ],
                    "type": "string"
                },
                "StatusUpdatedTimestamp": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Actuator.ActuatorListResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Actuator.ActuatorRequest": {
            "properties": {
                "ActuatorResourceValues": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Actuator.ActuatorResourceValueRequest"
                    },
                    "type": "array"
                },
                "EventCategoryId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "ResourceCollectionId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "ResourceCollectionId",
                "EventCategoryId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Actuator.ActuatorResourceValueRequest": {
            "properties": {
                "ExecuteOnActivate": {
                    "type": "boolean"
                },
                "ExecuteOnReset": {
                    "type": "boolean"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResetValue": {
                    "type": "string"
                },
                "ResourceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "SmartObjectTypeId",
                "ResourceTypeId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Actuator.ActuatorResourceValueResponse": {
            "properties": {
                "ExecuteOnActivate": {
                    "type": "boolean"
                },
                "ExecuteOnReset": {
                    "type": "boolean"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResetValue": {
                    "type": "string"
                },
                "ResourceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "SmartObjectTypeId",
                "ResourceTypeId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Actuator.ActuatorResponse": {
            "properties": {
                "ActuatorResourceValues": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Actuator.ActuatorResourceValueResponse"
                    },
                    "type": "array"
                },
                "EventCategoryId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "ResourceCollectionId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "ResourceCollectionId",
                "EventCategoryId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.AdGroupResponse": {
            "properties": {
                "FullName": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ApiKey.ApiKeyResponse": {
            "properties": {
                "DeviceNetworkId": {
                    "format": "uuid",
                    "type": "string"
                },
                "ExpirationDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Key": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "RoleIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name",
                "ExpirationDate"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorListResponse": {
            "properties": {
                "Config": {
                    "type": "string"
                },
                "ContactLost": {
                    "type": "boolean"
                },
                "ContactLostTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "DataCollectorTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DataCollectorTypeName": {
                    "type": "string"
                },
                "ExternalId": {
                    "type": "string"
                },
                "FirmwareVersion": {
                    "type": "string"
                },
                "HardwareVersion": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsBlacklisted": {
                    "type": "boolean"
                },
                "IsConfigured": {
                    "type": "boolean"
                },
                "IsUpdating": {
                    "type": "boolean"
                },
                "LastSeen": {
                    "format": "int64",
                    "type": "integer"
                },
                "LastUpdateFinishTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastUpdateStatusCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationName": {
                    "type": "string"
                },
                "MACAddress": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "NbrOfDevices": {
                    "format": "int32",
                    "type": "integer"
                },
                "SoftwareVersion": {
                    "type": "string"
                },
                "UpdatingStartTime": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorRequest": {
            "properties": {
                "Config": {
                    "type": "string"
                },
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.TypedConfigurationItemWithValue"
                    },
                    "type": "array"
                },
                "DataCollectorTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DataCollectorTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DisableMacAddressConflictCheck": {
                    "type": "boolean"
                },
                "ExternalId": {
                    "type": "string"
                },
                "IsBlacklisted": {
                    "type": "boolean"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "MACAddress": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Note": {
                    "type": "string"
                },
                "Settings": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingRequest"
                    },
                    "type": "array"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name",
                "MACAddress",
                "LocationId",
                "DataCollectorTemplateId",
                "DataCollectorTypeId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorResponse": {
            "properties": {
                "Config": {
                    "type": "string"
                },
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.TypedConfigurationItemWithValue"
                    },
                    "type": "array"
                },
                "ContactLost": {
                    "type": "boolean"
                },
                "ContactLostTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "DataCollectorTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DataCollectorTemplateName": {
                    "type": "string"
                },
                "DataCollectorTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DataCollectorTypeName": {
                    "type": "string"
                },
                "DataCollectorTypeTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "ExternalId": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "InternalDeviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsBlacklisted": {
                    "type": "boolean"
                },
                "IsConfigured": {
                    "type": "boolean"
                },
                "IsUpdating": {
                    "type": "boolean"
                },
                "LastConnectionTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "LastSeen": {
                    "format": "int64",
                    "type": "integer"
                },
                "LastUpdateFinishTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "LastUpdateStatusCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationName": {
                    "type": "string"
                },
                "MACAddress": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "NbrOfDevices": {
                    "format": "int32",
                    "type": "integer"
                },
                "Networks": {
                    "items": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "Note": {
                    "type": "string"
                },
                "Settings": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingResponse"
                    },
                    "type": "array"
                },
                "Statuses": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "Tags": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Tag.TagResponse"
                    },
                    "type": "array"
                },
                "UpdatingStartTime": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "MACAddress",
                "LocationId",
                "DataCollectorTemplateId",
                "DataCollectorTypeId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateExportResponse": {
            "properties": {
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.TypedConfigurationItemWithValue"
                    },
                    "type": "array"
                },
                "ContactLostThreshold": {
                    "format": "int32",
                    "type": "integer"
                },
                "DataCollectorTypeHardwareTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "HardwareCategory": {
                    "enum": [
                        "Unknown",
                        "GatewayType",
                        "DeviceType",
                        "SensorType",
                        "GatewayTemplate",
                        "DeviceTemplate",
                        "SensorTemplate"
                    ],
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateImportRequest": {
            "properties": {
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.TypedConfigurationItemWithValue"
                    },
                    "type": "array"
                },
                "ContactLostThreshold": {
                    "format": "int32",
                    "type": "integer"
                },
                "DataCollectorTypeHardwareTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "HardwareCategory": {
                    "enum": [
                        "Unknown",
                        "GatewayType",
                        "DeviceType",
                        "SensorType",
                        "GatewayTemplate",
                        "DeviceTemplate",
                        "SensorTemplate"
                    ],
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateRequest": {
            "properties": {
                "Config": {
                    "type": "string"
                },
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.TypedConfigurationItemWithValue"
                    },
                    "type": "array"
                },
                "ContactLostThreshold": {
                    "format": "int32",
                    "type": "integer"
                },
                "DataCollectorTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "InternalDeviceTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "DataCollectorTypeId",
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateResponse": {
            "properties": {
                "Config": {
                    "type": "string"
                },
                "ConfigString": {
                    "type": "string"
                },
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.TypedConfigurationItemWithValue"
                    },
                    "type": "array"
                },
                "ContactLostThreshold": {
                    "format": "int32",
                    "type": "integer"
                },
                "DataCollectorTemplateSettingValues": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DataCollectorTemplateSettingValueResponse"
                    },
                    "type": "array"
                },
                "DataCollectorType": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTypeResponse"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "InternalDeviceTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "Tags": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Tag.TagResponse"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorTypeCreateRequest": {
            "properties": {
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.TypedConfigurationItem"
                    },
                    "type": "array"
                },
                "CreateDefaultTemplate": {
                    "type": "boolean"
                },
                "DefaultTemplateConfigurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.TypedConfigurationItemWithValue"
                    },
                    "type": "array"
                },
                "HardwareTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "InternalDeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsLegacy": {
                    "type": "boolean"
                },
                "IsVirtual": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "SettingCategories": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SettingCategory.SettingCategoryRequest"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorTypeExportResponse": {
            "properties": {
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.TypedConfigurationItem"
                    },
                    "type": "array"
                },
                "HardwareCategory": {
                    "enum": [
                        "Unknown",
                        "GatewayType",
                        "DeviceType",
                        "SensorType",
                        "GatewayTemplate",
                        "DeviceTemplate",
                        "SensorTemplate"
                    ],
                    "type": "string"
                },
                "HardwareTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorTypeImportRequest": {
            "properties": {
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.TypedConfigurationItem"
                    },
                    "type": "array"
                },
                "HardwareCategory": {
                    "enum": [
                        "Unknown",
                        "GatewayType",
                        "DeviceType",
                        "SensorType",
                        "GatewayTemplate",
                        "DeviceTemplate",
                        "SensorTemplate"
                    ],
                    "type": "string"
                },
                "HardwareTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorTypeListResponse": {
            "properties": {
                "HardwareTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsVirtual": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "NbrOfInstances": {
                    "format": "int64",
                    "type": "integer"
                },
                "NbrOfTemplates": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorTypeRequest": {
            "properties": {
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.TypedConfigurationItem"
                    },
                    "type": "array"
                },
                "HardwareTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "InternalDeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsLegacy": {
                    "type": "boolean"
                },
                "IsVirtual": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "SettingCategories": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SettingCategory.SettingCategoryRequest"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.DataCollectorTypeResponse": {
            "properties": {
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.TypedConfigurationItem"
                    },
                    "type": "array"
                },
                "HardwareTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "InternalDeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "InternalSensorColletionTypeName": {
                    "type": "string"
                },
                "IsLegacy": {
                    "type": "boolean"
                },
                "IsVirtual": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "SettingCategories": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SettingCategory.SettingCategoryResponse"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataCollector.RegistrationTicket": {
            "properties": {
                "BlobStorageSas": {
                    "type": "string"
                },
                "BlobStorageUri": {
                    "type": "string"
                },
                "DataCollectorId": {
                    "type": "string"
                },
                "InboxAccessTicket": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.Security.AccessTicket"
                },
                "OutboxAccessTicket": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.Security.AccessTicket"
                },
                "SecurityToken": {
                    "type": "string"
                },
                "SecurityTokenUpdate": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.DataReporting.MeasurementMessage": {
            "properties": {
                "d": {
                    "format": "date-time",
                    "type": "string"
                },
                "m": {
                    "items": {
                        "format": "double",
                        "type": "number"
                    },
                    "type": "array"
                },
                "t": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.DefaultSetting.DefaultSettingRequest": {
            "properties": {
                "DataType": {
                    "enum": [
                        "String",
                        "Integer",
                        "Boolean",
                        "HexString"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsMandatory": {
                    "type": "boolean"
                },
                "IsReadonly": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DefaultSetting.DefaultSettingResponse": {
            "properties": {
                "DataType": {
                    "enum": [
                        "String",
                        "Integer",
                        "Boolean",
                        "HexString"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsMandatory": {
                    "type": "boolean"
                },
                "IsReadonly": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Device.DeviceDiscoveryResponse": {
            "properties": {
                "DataCollectorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DataCollectorName": {
                    "type": "string"
                },
                "Endpoint": {
                    "type": "string"
                },
                "LastObserved": {
                    "format": "int64",
                    "type": "integer"
                },
                "SignalStrength": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Device.DeviceFilterResponse": {
            "properties": {
                "DeviceTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Device.DeviceListResponse": {
            "properties": {
                "DeregistrationDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeviceIdentifier": {
                    "type": "string"
                },
                "DeviceStandard": {
                    "enum": [
                        "LWM2M",
                        "Legacy",
                        "Transformer",
                        "Statistics",
                        "AppIoTInternal"
                    ],
                    "type": "string"
                },
                "DeviceTemplateContactLostThreshold": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeviceTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DeviceTemplateName": {
                    "type": "string"
                },
                "DeviceType": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceType.DeviceTypeListResponse"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "InstanceType": {
                    "enum": [
                        "Normal",
                        "Internal",
                        "Virtual",
                        "GatewayInternal"
                    ],
                    "type": "string"
                },
                "LastSeen": {
                    "format": "date-time",
                    "type": "string"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationName": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "RegistrationDate": {
                    "format": "date-time",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Device.DeviceMassRegistrationResponse": {
            "properties": {
                "CorrelationId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Device.DeviceRequest": {
            "properties": {
                "BootstrapServerName": {
                    "type": "string"
                },
                "DataCollectorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DeviceIdentifier": {
                    "type": "string"
                },
                "DeviceStandard": {
                    "enum": [
                        "LWM2M",
                        "Legacy",
                        "Transformer",
                        "Statistics",
                        "AppIoTInternal"
                    ],
                    "type": "string"
                },
                "DeviceTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Position": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.Position.PositionRequest"
                },
                "SettingCategories": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SettingCategory.SettingCategoryValueRequest"
                    },
                    "type": "array"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "DeviceTypeId",
                "Name",
                "DeviceIdentifier",
                "DeviceTemplateId",
                "DataCollectorId",
                "LocationId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Device.DeviceResponse": {
            "properties": {
                "BootstrapServerName": {
                    "type": "string"
                },
                "ContactLost": {
                    "type": "boolean"
                },
                "ContactLostTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "DataCollectorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DataCollectorName": {
                    "type": "string"
                },
                "DeregistrationTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "DeviceIdentifier": {
                    "type": "string"
                },
                "DeviceStandard": {
                    "enum": [
                        "LWM2M",
                        "Legacy",
                        "Transformer",
                        "Statistics",
                        "AppIoTInternal"
                    ],
                    "type": "string"
                },
                "DeviceTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DeviceTemplateName": {
                    "type": "string"
                },
                "DeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DeviceTypeName": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "InitialRegistrationTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "LastSeen": {
                    "format": "date-time",
                    "type": "string"
                },
                "LatestRegistrationTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationName": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "SmartObjects": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObject.SmartObjectListResponse"
                    },
                    "type": "array"
                },
                "Tags": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Tag.TagResponse"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name",
                "DeviceIdentifier",
                "DeviceTemplateId",
                "DataCollectorId",
                "LocationId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Device.FirmwareUpgradeRequest": {
            "properties": {
                "FirmwarePackageId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceNetwork.BarcodeParserResponse": {
            "properties": {
                "BarcodeEntityType": {
                    "enum": [
                        "Unknown",
                        "DataCollector",
                        "SensorCollection"
                    ],
                    "type": "string"
                },
                "EntityId": {
                    "format": "uuid",
                    "type": "string"
                },
                "HardwareId": {
                    "format": "uuid",
                    "type": "string"
                },
                "HardwareTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "MacAddress": {
                    "type": "string"
                },
                "Registred": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceNetwork.DeviceNetworkRequest": {
            "properties": {
                "Name": {
                    "type": "string"
                },
                "TenantId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "TenantId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceNetwork.DeviceNetworkResponse": {
            "properties": {
                "ExternalId": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "TenantId": {
                    "format": "uuid",
                    "type": "string"
                },
                "TenantName": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "TenantId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceTemplate.DataCollectorTemplateSettingValueRequest": {
            "properties": {
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Value"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceTemplate.DataCollectorTemplateSettingValueResponse": {
            "properties": {
                "DefaultSettingId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Value"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateListResponse": {
            "properties": {
                "DeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DeviceTypeName": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "SmartObjectTypes": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeWithTemplatesResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateRequest": {
            "properties": {
                "ContactLostThreshold": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "SmartObjectTemplates": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.SmartObjectTemplateInsertRequest"
                    },
                    "type": "array"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "DeviceTypeId",
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateResponse": {
            "properties": {
                "ContactLostThreshold": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeviceTemplateSettingValues": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateSettingValueResponse"
                    },
                    "type": "array"
                },
                "DeviceTemplateTransformers": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerTemplate.TransformerTemplateResponse"
                    },
                    "type": "array"
                },
                "DeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DeviceTypeName": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "SmartObjectTypes": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeWithTemplatesResponse"
                    },
                    "type": "array"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "DeviceTypeId",
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateSettingValueRequest": {
            "properties": {
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Value"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateSettingValueResponse": {
            "properties": {
                "DefaultSettingId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Value"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceTemplate.SmartObjectTemplateInsertRequest": {
            "properties": {
                "SmartObjectSelectedTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceType.DeviceTypeListResponse": {
            "properties": {
                "DeviceStandard": {
                    "enum": [
                        "LWM2M",
                        "Legacy",
                        "Transformer",
                        "Statistics",
                        "AppIoTInternal"
                    ],
                    "type": "string"
                },
                "DeviceStandardId": {
                    "format": "int32",
                    "type": "integer"
                },
                "HardwareTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "NbrOfInstances": {
                    "format": "int32",
                    "type": "integer"
                },
                "NbrOfTemplates": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceType.DeviceTypeRequest": {
            "properties": {
                "DeviceStandard": {
                    "enum": [
                        "LWM2M",
                        "Legacy",
                        "Transformer",
                        "Statistics",
                        "AppIoTInternal"
                    ],
                    "type": "string"
                },
                "HardwareTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsRequestDiscovery": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "SettingCategories": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SettingCategory.SettingCategoryRequest"
                    },
                    "type": "array"
                },
                "SkipDeviceStandardValidation": {
                    "type": "boolean"
                },
                "SmartObjectTypeInstanceIds": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectTypeInstanceId.SmartObjectTypeInstanceIdRequest"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.DeviceType.DeviceTypeResponse": {
            "properties": {
                "DeviceStandard": {
                    "enum": [
                        "LWM2M",
                        "Legacy",
                        "Transformer",
                        "Statistics",
                        "AppIoTInternal"
                    ],
                    "type": "string"
                },
                "DeviceStandardId": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeviceTemplates": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateResponse"
                    },
                    "type": "array"
                },
                "HardwareTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsRequestDiscovery": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "SettingCategories": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SettingCategory.SettingCategoryResponse"
                    },
                    "type": "array"
                },
                "SmartObjectTypeInstanceIds": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectTypeInstanceId.SmartObjectTypeInstanceIdResponse"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Event.EventMessage": {
            "properties": {
                "DeviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DeviceIdentifier": {
                    "type": "string"
                },
                "DeviceName": {
                    "type": "string"
                },
                "DeviceNetworkId": {
                    "format": "uuid",
                    "type": "string"
                },
                "EventCategoryId": {
                    "format": "uuid",
                    "type": "string"
                },
                "EventCategoryName": {
                    "type": "string"
                },
                "EventCategoryTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "EventStatus": {
                    "enum": [
                        "Active",
                        "AutomaticReset",
                        "ManualReset",
                        "ManualTest"
                    ],
                    "type": "string"
                },
                "Generated": {
                    "format": "date-time",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Information": {
                    "type": "string"
                },
                "LocationExternalId": {
                    "type": "string"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationName": {
                    "type": "string"
                },
                "Measurement": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.GrainCommunication.MinimalMeasurementMessage"
                },
                "ResourceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceName": {
                    "type": "string"
                },
                "RuleDescription": {
                    "type": "string"
                },
                "RuleId": {
                    "format": "uuid",
                    "type": "string"
                },
                "RuleName": {
                    "type": "string"
                },
                "SeverityLevel": {
                    "format": "int32",
                    "type": "integer"
                },
                "TriggerOperator": {
                    "enum": [
                        "Equals",
                        "NotEquals",
                        "GreaterThan",
                        "GreaterEqual",
                        "LowerThan",
                        "LowerEqual",
                        "InsideRange",
                        "InsideRangeStrict",
                        "OutsideRange",
                        "StringEquals",
                        "StringNotEquals",
                        "StringStartsWith",
                        "StringNotStartsWith",
                        "StringEndsWith",
                        "StringNotEndsWith",
                        "StringContains",
                        "StringNotContains",
                        "StringRegexMatch",
                        "StringNotRegexMatch",
                        "BooleanIsTrue",
                        "BooleanIsFalse",
                        "None"
                    ],
                    "type": "string"
                },
                "TriggerStringValue": {
                    "type": "string"
                },
                "TriggerThresholdMaxValue": {
                    "format": "double",
                    "type": "number"
                },
                "TriggerThresholdMinValue": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Event.EventResponse": {
            "properties": {
                "Active": {
                    "type": "boolean"
                },
                "BooleanValue": {
                    "type": "boolean"
                },
                "CreatedDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DeviceIdentifier": {
                    "type": "string"
                },
                "DeviceName": {
                    "type": "string"
                },
                "EventCategoryId": {
                    "format": "uuid",
                    "type": "string"
                },
                "EventCategoryName": {
                    "type": "string"
                },
                "EventCategoryTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Information": {
                    "type": "string"
                },
                "IsDeviceDeleted": {
                    "type": "boolean"
                },
                "IsEventCategoryDeleted": {
                    "type": "boolean"
                },
                "IsResourceDeleted": {
                    "type": "boolean"
                },
                "ResetBooleanValue": {
                    "type": "boolean"
                },
                "ResetDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "ResetOperator": {
                    "enum": [
                        "Equals",
                        "NotEquals",
                        "GreaterThan",
                        "GreaterEqual",
                        "LowerThan",
                        "LowerEqual",
                        "InsideRange",
                        "InsideRangeStrict",
                        "OutsideRange",
                        "StringEquals",
                        "StringNotEquals",
                        "StringStartsWith",
                        "StringNotStartsWith",
                        "StringEndsWith",
                        "StringNotEndsWith",
                        "StringContains",
                        "StringNotContains",
                        "StringRegexMatch",
                        "StringNotRegexMatch",
                        "BooleanIsTrue",
                        "BooleanIsFalse",
                        "None"
                    ],
                    "type": "string"
                },
                "ResetStringValue": {
                    "type": "string"
                },
                "ResetValue": {
                    "format": "double",
                    "type": "number"
                },
                "ResourceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceName": {
                    "type": "string"
                },
                "RuleDescription": {
                    "type": "string"
                },
                "RuleId": {
                    "format": "uuid",
                    "type": "string"
                },
                "RuleName": {
                    "type": "string"
                },
                "SeverityLevel": {
                    "format": "int32",
                    "type": "integer"
                },
                "Status": {
                    "enum": [
                        "Active",
                        "AutomaticReset",
                        "ManualReset",
                        "ManualTest"
                    ],
                    "type": "string"
                },
                "StringValue": {
                    "type": "string"
                },
                "TriggerMaxLimit": {
                    "format": "double",
                    "type": "number"
                },
                "TriggerMaxResetLimit": {
                    "format": "double",
                    "type": "number"
                },
                "TriggerMinLimit": {
                    "format": "double",
                    "type": "number"
                },
                "TriggerMinResetLimit": {
                    "format": "double",
                    "type": "number"
                },
                "TriggerOperator": {
                    "enum": [
                        "Equals",
                        "NotEquals",
                        "GreaterThan",
                        "GreaterEqual",
                        "LowerThan",
                        "LowerEqual",
                        "InsideRange",
                        "InsideRangeStrict",
                        "OutsideRange",
                        "StringEquals",
                        "StringNotEquals",
                        "StringStartsWith",
                        "StringNotStartsWith",
                        "StringEndsWith",
                        "StringNotEndsWith",
                        "StringContains",
                        "StringNotContains",
                        "StringRegexMatch",
                        "StringNotRegexMatch",
                        "BooleanIsTrue",
                        "BooleanIsFalse",
                        "None"
                    ],
                    "type": "string"
                },
                "TriggerStringResetValue": {
                    "type": "string"
                },
                "TriggerStringValue": {
                    "type": "string"
                },
                "TriggerValue": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.EventCategory.EventCategoryListResponse": {
            "properties": {
                "EventConsumers": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.EventConsumer.EventConsumerSmallResponse"
                    },
                    "type": "array"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Rules": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Rule.RuleListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.EventCategory.EventCategoryRequest": {
            "properties": {
                "EventConsumerIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.EventCategory.EventCategoryResponse": {
            "properties": {
                "EventConsumerIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "EventConsumers": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.EventConsumer.EventConsumerSmallResponse"
                    },
                    "type": "array"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Rules": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Rule.RuleListResponse"
                    },
                    "type": "array"
                },
                "TypeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.EventConsumer.EventConsumerRequest": {
            "properties": {
                "HttpEndpoint": {
                    "type": "string"
                },
                "HttpHeaders": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.ConfigurationItem"
                    },
                    "type": "array"
                },
                "HttpMethod": {
                    "type": "string"
                },
                "HttpPassword": {
                    "type": "string"
                },
                "HttpUsername": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "UsingHttpEndpoint": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.EventConsumer.EventConsumerResponse": {
            "properties": {
                "EventCategories": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.EventCategory.EventCategoryResponse"
                    },
                    "type": "array"
                },
                "HttpEndpoint": {
                    "type": "string"
                },
                "HttpHeaders": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.ConfigurationItem"
                    },
                    "type": "array"
                },
                "HttpMethod": {
                    "type": "string"
                },
                "HttpPassword": {
                    "type": "string"
                },
                "HttpUsername": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IntegrationTicket": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.EventConsumer.IntegrationTicket"
                },
                "Name": {
                    "type": "string"
                },
                "UsingHttpEndpoint": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.EventConsumer.EventConsumerSmallResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "UsingHttpEndpoint": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.EventConsumer.IntegrationTicket": {
            "properties": {
                "InboxAccessTicket": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.Security.AccessTicket"
                },
                "OutboxAccessTicket": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.Security.AccessTicket"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.FirmwarePackage.FirmwarePackageListResponse": {
            "properties": {
                "Build": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.FirmwarePackage.FirmwarePackageRequest": {
            "properties": {
                "Build": {
                    "type": "string"
                },
                "DeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                }
            },
            "required": [
                "DeviceTypeId",
                "Title",
                "Version"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.FirmwarePackage.FirmwarePackageResponse": {
            "properties": {
                "Build": {
                    "type": "string"
                },
                "Created": {
                    "format": "date-time",
                    "type": "string"
                },
                "DeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Filename": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsActive": {
                    "type": "boolean"
                },
                "Title": {
                    "type": "string"
                },
                "Uri": {
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                }
            },
            "required": [
                "DeviceTypeId",
                "Title",
                "Version"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.ConfigurationItem": {
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Key",
                "Value"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.CustomCommandRequest": {
            "properties": {
                "ActorId": {
                    "type": "string"
                },
                "CorrelationId": {
                    "type": "string"
                },
                "Payload": {
                    "type": "object"
                },
                "PayloadCustomType": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.DeviceFilterBase": {
            "properties": {
                "DeviceTemplateIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "DeviceTypeIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "IncludeChildLocations": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "LocationIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.EntityIdResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.ActivityLog.ActivityLogEntryResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ActivityLog.ActivityLogEntryResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Actuator.ActuatorListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Actuator.ActuatorListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorTypeListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTypeListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorTypeResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTypeResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DefaultSetting.DefaultSettingResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DefaultSetting.DefaultSettingResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Device.DeviceListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Device.DeviceListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DeviceNetwork.DeviceNetworkResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceNetwork.DeviceNetworkResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DeviceType.DeviceTypeListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceType.DeviceTypeListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Event.EventResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Event.EventResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.EventCategory.EventCategoryListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.EventCategory.EventCategoryListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.EventConsumer.EventConsumerResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.EventConsumer.EventConsumerResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.FirmwarePackage.FirmwarePackageListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.FirmwarePackage.FirmwarePackageListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Location.LocationListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Location.LocationListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Location.LocationResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Location.LocationResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.LocationResource.LocationResourceResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.LocationResource.LocationResourceResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.LocationResource.LocationResourceWithPositionsResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.LocationResource.LocationResourceWithPositionsResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Logging.LogFileResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Logging.LogFileResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.NetworkSetting.NetworkSettingResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.NetworkSetting.NetworkSettingResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Position.PositionItemResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Position.PositionItemResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Position.PositionListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Position.PositionListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Position.PositionResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Position.PositionResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.ResourceCollection.ResourceCollectionListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceCollection.ResourceCollectionListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.ResourceType.ResourceTypeListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceType.ResourceTypeListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Responsibility.ResponsibilityResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Responsibility.ResponsibilityResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Role.SpecificRoleResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Role.SpecificRoleResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Rule.RuleListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Rule.RuleListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Rule.RuleResourceConditionResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Rule.RuleResourceConditionResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.SettingCategory.SettingCategoryResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SettingCategory.SettingCategoryResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.SmartObjectTemplate.SmartObjectTemplateListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectTemplate.SmartObjectTemplateListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Tag.TagResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Tag.TagResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Tenant.TenantResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Tenant.TenantResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.TransformerType.TransformerTypeListResponse]": {
            "properties": {
                "NbrOfPages": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "NbrOfRows": {
                    "format": "int32",
                    "type": "integer"
                },
                "Page": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "Rows": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerType.TransformerTypeListResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.TypedConfigurationItem": {
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Type": {
                    "enum": [
                        "String",
                        "Integer",
                        "Boolean"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.General.TypedConfigurationItemWithValue": {
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Type": {
                    "enum": [
                        "String",
                        "Integer",
                        "Boolean"
                    ],
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.GrainCommunication.MinimalMeasurementMessage": {
            "properties": {
                "DateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "UnixTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "bv": {
                    "type": "boolean"
                },
                "sv": {
                    "type": "string"
                },
                "v": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.GrainCommunication.SignalRMeasurementMessage": {
            "properties": {
                "SensorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "UnixTimestamp": {
                    "format": "int64",
                    "type": "integer"
                },
                "Values": {
                    "items": {
                        "format": "double",
                        "type": "number"
                    },
                    "type": "array"
                },
                "bv": {
                    "type": "boolean"
                },
                "d": {
                    "format": "date-time",
                    "type": "string"
                },
                "r": {
                    "format": "uuid",
                    "type": "string"
                },
                "ruri": {
                    "type": "string"
                },
                "sv": {
                    "type": "string"
                },
                "v": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ImportExportDefinitions.ExportDefinition": {
            "properties": {
                "DeviceTemplateIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "DeviceTypeIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ImportExportDefinitions.ImportResponse": {
            "properties": {
                "DeviceTypes": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ImportExportDefinitions.ImportResultDeviceType"
                    },
                    "type": "array"
                },
                "SmartObjectTemplates": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ImportExportDefinitions.ImportResultSmartObjectTemplate"
                    },
                    "type": "array"
                },
                "Tags": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ImportExportDefinitions.ImportResultTag"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ImportExportDefinitions.ImportResultDeviceTemplate": {
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Reason": {
                    "type": "string"
                },
                "Result": {
                    "enum": [
                        "Ignored",
                        "Added",
                        "Failed"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ImportExportDefinitions.ImportResultDeviceType": {
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Reason": {
                    "type": "string"
                },
                "Result": {
                    "enum": [
                        "Ignored",
                        "Added",
                        "Failed"
                    ],
                    "type": "string"
                },
                "Templates": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ImportExportDefinitions.ImportResultDeviceTemplate"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ImportExportDefinitions.ImportResultSmartObjectTemplate": {
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Reason": {
                    "type": "string"
                },
                "Result": {
                    "enum": [
                        "Ignored",
                        "Added",
                        "Failed"
                    ],
                    "type": "string"
                },
                "SmartObjectName": {
                    "type": "string"
                },
                "SmartObjectObjectUrn": {
                    "type": "string"
                },
                "SmartObjectTypeTypeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ImportExportDefinitions.ImportResultTag": {
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Reason": {
                    "type": "string"
                },
                "Result": {
                    "enum": [
                        "Ignored",
                        "Added",
                        "Failed"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Ipso.ResourceDefinition": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "instancetype": {
                    "enum": [
                        "Single",
                        "Multiple"
                    ],
                    "type": "string"
                },
                "mandatory": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "operations": {
                    "enum": [
                        "R",
                        "W",
                        "RW",
                        "E",
                        "RE",
                        "WE",
                        "RWE"
                    ],
                    "type": "string"
                },
                "range": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "String",
                        "Integer",
                        "Float",
                        "Boolean",
                        "Opaque",
                        "Time",
                        "Objlnk"
                    ],
                    "type": "string"
                },
                "units": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "name",
                "instancetype",
                "Mandatory",
                "type",
                "range"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Ipso.SmartObjectDefinition": {
            "properties": {
                "LWM2MVersion": {
                    "type": "string"
                },
                "MultipleInstances": {
                    "enum": [
                        "Single",
                        "Multiple"
                    ],
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "ObjectID": {
                    "format": "int32",
                    "type": "integer"
                },
                "ObjectType": {
                    "type": "string"
                },
                "ObjectURN": {
                    "type": "string"
                },
                "ObjectVersion": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "mandatory": {
                    "type": "boolean"
                },
                "resourcedefs": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Ipso.ResourceDefinition"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name",
                "description",
                "ObjectID",
                "ObjectURN",
                "MultipleInstances",
                "Mandatory"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Location.LocationListResponse": {
            "properties": {
                "ExternalId": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationType": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "ParentLocationId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Location.LocationRequest": {
            "properties": {
                "ExternalId": {
                    "type": "string"
                },
                "LocationType": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "ParentLocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Settings": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingRequest"
                    },
                    "type": "array"
                },
                "Tags": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "TimeZone": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Location.LocationResponse": {
            "properties": {
                "ExternalId": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationType": {
                    "format": "int32",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "ParentLocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "ParentLocationName": {
                    "type": "string"
                },
                "Settings": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingResponse"
                    },
                    "type": "array"
                },
                "TimeZone": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Location.LocationTransformerRequest": {
            "properties": {
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.ConfigurationItem"
                    },
                    "type": "array"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "ResourceCollectionId": {
                    "format": "uuid",
                    "type": "string"
                },
                "TransformerTargetTypeConfigurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerTemplate.TransformerTargetTypeConfigurationModel"
                    },
                    "type": "array"
                },
                "TransformerType": {
                    "type": "string"
                }
            },
            "required": [
                "LocationId",
                "Name",
                "ResourceCollectionId",
                "TransformerType",
                "TransformerTargetTypeConfigurations"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.LocationResource.LocationResourceRequest": {
            "properties": {
                "Data": {
                    "type": "string"
                },
                "FileExtension": {
                    "type": "string"
                },
                "Height": {
                    "format": "int32",
                    "type": "integer"
                },
                "Label": {
                    "type": "string"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationResourceType": {
                    "enum": [
                        "None",
                        "Map",
                        "ThreeDimensional",
                        "Image"
                    ],
                    "type": "string"
                },
                "MimeType": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Positions": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Position.PositionListRequest"
                    },
                    "type": "array"
                },
                "StartPositionX": {
                    "format": "double",
                    "type": "number"
                },
                "StartPositionY": {
                    "format": "double",
                    "type": "number"
                },
                "StartPositionZ": {
                    "format": "double",
                    "type": "number"
                },
                "StartZoomLevel": {
                    "format": "double",
                    "type": "number"
                },
                "Width": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "MimeType",
                "FileExtension",
                "LocationResourceType"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.LocationResource.LocationResourceResponse": {
            "properties": {
                "FileExtension": {
                    "type": "string"
                },
                "Height": {
                    "format": "int32",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Label": {
                    "type": "string"
                },
                "Level": {
                    "format": "int32",
                    "type": "integer"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationResourceType": {
                    "enum": [
                        "None",
                        "Map",
                        "ThreeDimensional",
                        "Image"
                    ],
                    "type": "string"
                },
                "MimeType": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "StartPositionX": {
                    "format": "double",
                    "type": "number"
                },
                "StartPositionY": {
                    "format": "double",
                    "type": "number"
                },
                "StartPositionZ": {
                    "format": "double",
                    "type": "number"
                },
                "StartZoomLevel": {
                    "format": "double",
                    "type": "number"
                },
                "Uri": {
                    "type": "string"
                },
                "Width": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "MimeType",
                "FileExtension",
                "LocationResourceType"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.LocationResource.LocationResourceWithPositionsResponse": {
            "properties": {
                "FileExtension": {
                    "type": "string"
                },
                "Height": {
                    "format": "int32",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Label": {
                    "type": "string"
                },
                "LocationResourceType": {
                    "enum": [
                        "None",
                        "Map",
                        "ThreeDimensional",
                        "Image"
                    ],
                    "type": "string"
                },
                "MimeType": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Positions": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Position.PositionListResponse"
                    },
                    "type": "array"
                },
                "StartPositionX": {
                    "format": "double",
                    "type": "number"
                },
                "StartPositionY": {
                    "format": "double",
                    "type": "number"
                },
                "StartPositionZ": {
                    "format": "double",
                    "type": "number"
                },
                "StartZoomLevel": {
                    "format": "double",
                    "type": "number"
                },
                "Uri": {
                    "type": "string"
                },
                "Width": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Logging.LogFileResponse": {
            "properties": {
                "Date": {
                    "format": "date-time",
                    "type": "string"
                },
                "Length": {
                    "format": "int64",
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Uri": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Logging.LogResponse": {
            "properties": {
                "DataCollectorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DataCollectorName": {
                    "type": "string"
                },
                "LogLevel": {
                    "enum": [
                        "Off",
                        "Error",
                        "Warning",
                        "Informational",
                        "Verbose"
                    ],
                    "type": "string"
                },
                "Message": {
                    "type": "string"
                },
                "SensorCollectorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SensorCollectorName": {
                    "type": "string"
                },
                "Timestamp": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Measurement.AdvancedMeasurementQuery": {
            "properties": {
                "Calculation": {
                    "enum": [
                        "Average",
                        "SumOfMaxMinDifference",
                        "SumOfEndStartDifference",
                        "NbrOfRows"
                    ],
                    "type": "string"
                },
                "Dimension": {
                    "format": "int32",
                    "type": "integer"
                },
                "GroupBy": {
                    "items": {
                        "enum": [
                            "Year",
                            "Quarter",
                            "Month",
                            "DayOfYear",
                            "Day",
                            "Week",
                            "WeekDay",
                            "Hour",
                            "IsoWeek"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "IncludeChildLocations": {
                    "type": "boolean"
                },
                "LocationIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "SensorCollectionId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SensorTemplateIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "SensorTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Start": {
                    "format": "date-time",
                    "type": "string"
                },
                "Stop": {
                    "format": "date-time",
                    "type": "string"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Measurement.AdvancedMeasurementQueryResponse": {
            "properties": {
                "Timestamp": {
                    "format": "date-time",
                    "type": "string"
                },
                "Value": {
                    "format": "double",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Measurement.AggregatedMeasurements": {
            "properties": {
                "AggregationType": {
                    "enum": [
                        "Realtime",
                        "TimeWeightedAverage",
                        "MaxValue",
                        "MinValue",
                        "StartValue",
                        "EndValue",
                        "TimeWeightedVariance",
                        "NbrOfMeasurements",
                        "Length",
                        "All",
                        "ArithmeticMean",
                        "Variance"
                    ],
                    "type": "string"
                },
                "CalculatedResolution": {
                    "format": "int64",
                    "type": "integer"
                },
                "NumberOfMeasurements": {
                    "format": "int32",
                    "type": "integer"
                },
                "Resolution": {
                    "format": "int64",
                    "type": "integer"
                },
                "Timers": {
                    "additionalProperties": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "type": "object"
                },
                "TimespanEnd": {
                    "format": "int64",
                    "type": "integer"
                },
                "TimespanStart": {
                    "format": "int64",
                    "type": "integer"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "v": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DataReporting.MeasurementMessage"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Measurement.MinimalMeasurements": {
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "v": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.GrainCommunication.MinimalMeasurementMessage"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse": {
            "properties": {
                "Message": {
                    "type": "string"
                },
                "ModelState": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.NetworkSetting.NetworkSettingRequest": {
            "properties": {
                "AuthenticationType": {
                    "enum": [
                        "Disabled",
                        "WEP64Bits",
                        "WEP128Bits",
                        "WPAPSK",
                        "WPA2PSK"
                    ],
                    "type": "string"
                },
                "LocationIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "Name": {
                    "type": "string"
                },
                "NetworkType": {
                    "enum": [
                        "ETHERNET",
                        "WIFI",
                        "WWAN"
                    ],
                    "type": "string"
                },
                "PreSharedKey": {
                    "type": "string"
                },
                "Priority": {
                    "format": "int32",
                    "type": "integer"
                },
                "SSID": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.NetworkSetting.NetworkSettingResponse": {
            "properties": {
                "AuthenticationType": {
                    "enum": [
                        "Disabled",
                        "WEP64Bits",
                        "WEP128Bits",
                        "WPAPSK",
                        "WPA2PSK"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "Name": {
                    "type": "string"
                },
                "NetworkType": {
                    "enum": [
                        "ETHERNET",
                        "WIFI",
                        "WWAN"
                    ],
                    "type": "string"
                },
                "Priority": {
                    "format": "int32",
                    "type": "integer"
                },
                "SSID": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.NetworkSetting.NetworkSettingUpdateRequest": {
            "properties": {
                "AuthenticationType": {
                    "enum": [
                        "Disabled",
                        "WEP64Bits",
                        "WEP128Bits",
                        "WPAPSK",
                        "WPA2PSK"
                    ],
                    "type": "string"
                },
                "LocationIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "Name": {
                    "type": "string"
                },
                "NetworkType": {
                    "enum": [
                        "ETHERNET",
                        "WIFI",
                        "WWAN"
                    ],
                    "type": "string"
                },
                "PasswordChanged": {
                    "type": "boolean"
                },
                "PreSharedKey": {
                    "type": "string"
                },
                "Priority": {
                    "format": "int32",
                    "type": "integer"
                },
                "SSID": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Position.PositionItemResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "LatitudeResourceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationResourceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationResourceLocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationResourceLocationName": {
                    "type": "string"
                },
                "LongitudeResourceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "X": {
                    "format": "double",
                    "type": "number"
                },
                "Y": {
                    "format": "double",
                    "type": "number"
                },
                "Z": {
                    "format": "double",
                    "type": "number"
                }
            },
            "required": [
                "X",
                "Y"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Position.PositionListRequest": {
            "properties": {
                "EntityId": {
                    "format": "uuid",
                    "type": "string"
                },
                "EntityType": {
                    "enum": [
                        "Location",
                        "DataCollector",
                        "SensorCollection",
                        "Unknown",
                        "Device",
                        "DeviceIpsoDynamic"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "X": {
                    "format": "double",
                    "type": "number"
                },
                "Y": {
                    "format": "double",
                    "type": "number"
                },
                "Z": {
                    "format": "double",
                    "type": "number"
                }
            },
            "required": [
                "X",
                "Y",
                "EntityId",
                "EntityType"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Position.PositionListResponse": {
            "properties": {
                "EntityId": {
                    "format": "uuid",
                    "type": "string"
                },
                "EntityType": {
                    "enum": [
                        "Location",
                        "DataCollector",
                        "SensorCollection",
                        "Unknown",
                        "Device",
                        "DeviceIpsoDynamic"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "LatitudeResourceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LongitudeResourceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "X": {
                    "format": "double",
                    "type": "number"
                },
                "Y": {
                    "format": "double",
                    "type": "number"
                },
                "Z": {
                    "format": "double",
                    "type": "number"
                }
            },
            "required": [
                "X",
                "Y"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Position.PositionRequest": {
            "properties": {
                "EntityId": {
                    "format": "uuid",
                    "type": "string"
                },
                "EntityType": {
                    "enum": [
                        "Location",
                        "DataCollector",
                        "SensorCollection",
                        "Unknown",
                        "Device",
                        "DeviceIpsoDynamic"
                    ],
                    "type": "string"
                },
                "LocationResourceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "X": {
                    "format": "double",
                    "type": "number"
                },
                "Y": {
                    "format": "double",
                    "type": "number"
                },
                "Z": {
                    "format": "double",
                    "type": "number"
                }
            },
            "required": [
                "X",
                "Y",
                "LocationResourceId",
                "EntityType"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Position.PositionResponse": {
            "properties": {
                "EntityId": {
                    "format": "uuid",
                    "type": "string"
                },
                "EntityType": {
                    "enum": [
                        "Location",
                        "DataCollector",
                        "SensorCollection",
                        "Unknown",
                        "Device",
                        "DeviceIpsoDynamic"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "LatitudeResourceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LocationResourceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "LongitudeResourceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "X": {
                    "format": "double",
                    "type": "number"
                },
                "Y": {
                    "format": "double",
                    "type": "number"
                },
                "Z": {
                    "format": "double",
                    "type": "number"
                }
            },
            "required": [
                "X",
                "Y",
                "LocationResourceId",
                "EntityType"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.RealTime.RealTimeToken": {
            "properties": {
                "DeviceNetworkId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Expires": {
                    "format": "int64",
                    "type": "integer"
                },
                "Token": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Resolution.ResolutionRequest": {
            "properties": {
                "AggregateSinceTime": {
                    "format": "int64",
                    "type": "integer"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceTypeInstances": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceTypeInstance.ResourceTypeInstanceRequest"
                    },
                    "type": "array"
                },
                "RetentionDays": {
                    "format": "int64",
                    "type": "integer"
                },
                "Timespan": {
                    "format": "int64",
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Resolution.ResolutionResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceTypeInstances": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceTypeInstance.ResourceTypeInstanceResponse"
                    },
                    "type": "array"
                },
                "RetentionDays": {
                    "format": "int64",
                    "type": "integer"
                },
                "Timespan": {
                    "format": "int64",
                    "type": "integer"
                },
                "Title": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Resource.ResourceObserveRequest": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Timeout": {
                    "format": "int64",
                    "maximum": 9999999,
                    "minimum": 60,
                    "type": "integer"
                }
            },
            "required": [
                "Id"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Resource.ResourceObserveState": {
            "properties": {
                "IsObserveState": {
                    "type": "boolean"
                },
                "ObserveExpires": {
                    "format": "int64",
                    "type": "integer"
                },
                "Timeout": {
                    "format": "int64",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Resource.ResourceRequest": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                }
            },
            "required": [
                "SmartObjectId",
                "ResourceTypeId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Resource.ResourceResponse": {
            "properties": {
                "AccessType": {
                    "enum": [
                        "Read",
                        "Write",
                        "Execute",
                        "All"
                    ],
                    "type": "string"
                },
                "DataType": {
                    "enum": [
                        "String",
                        "Integer",
                        "Float",
                        "Boolean",
                        "Opaque",
                        "Time",
                        "Objlnk"
                    ],
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "DeviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DeviceName": {
                    "type": "string"
                },
                "DeviceNetworkId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsRequestObserve": {
                    "type": "boolean"
                },
                "IsUnavailable": {
                    "type": "boolean"
                },
                "IsVirtual": {
                    "type": "boolean"
                },
                "LatestMeasurement": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.GrainCommunication.SignalRMeasurementMessage"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Mandatory": {
                    "type": "boolean"
                },
                "MultipleInstances": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Range": {
                    "type": "string"
                },
                "ResourceTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectId": {
                    "format": "uuid",
                    "type": "string"
                },
                "TypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Units": {
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                }
            },
            "required": [
                "SmartObjectId",
                "ResourceTypeId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Resource.ResourceWriteRequest": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Id",
                "Value"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.ResourceCollection.ResourceCollectionListResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ResourceCollection.ResourceCollectionRequest": {
            "properties": {
                "DeviceIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "DeviceTemplateIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "DeviceTypeIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "HasCherryPickedResources": {
                    "type": "boolean"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IncludeChildLocations": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "LocationIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "Name": {
                    "type": "string"
                },
                "ResourceIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "ResourceTypeIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "SmartObjectIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "SmartObjectTemplateIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "SmartObjectTypeIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ResourceCollection.ResourceCollectionResponse": {
            "properties": {
                "CanBeDeleted": {
                    "type": "boolean"
                },
                "DeviceIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "DeviceTemplateIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "DeviceTypeIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "HasCherryPickedResources": {
                    "type": "boolean"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IncludeChildLocations": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "LocationIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "Name": {
                    "type": "string"
                },
                "ResourceIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "ResourceTypeIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "SmartObjectIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "SmartObjectTemplateIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "SmartObjectTypeIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ResourceTemplate.ResourceTemplateRequest": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsRequestObserve": {
                    "type": "boolean"
                },
                "ResourceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ResourceTemplate.ResourceTemplateResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsRequestObserve": {
                    "type": "boolean"
                },
                "ResourceType": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceType.ResourceTypeResponse"
                },
                "Value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ResourceType.ResourceTypeImportRequest": {
            "properties": {
                "AccessType": {
                    "enum": [
                        "Read",
                        "Write",
                        "Execute",
                        "All"
                    ],
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "InstanceType": {
                    "type": "string"
                },
                "IsReusable": {
                    "type": "boolean"
                },
                "Mandatory": {
                    "type": "boolean"
                },
                "MultipleInstances": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Operations": {
                    "type": "string"
                },
                "Range": {
                    "type": "string"
                },
                "Units": {
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "type": {
                    "enum": [
                        "String",
                        "Integer",
                        "Float",
                        "Boolean",
                        "Opaque",
                        "Time",
                        "Objlnk"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "InstanceType",
                "Operations",
                "Name",
                "id",
                "type"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.ResourceType.ResourceTypeListResponse": {
            "properties": {
                "DataType": {
                    "enum": [
                        "String",
                        "Integer",
                        "Float",
                        "Boolean",
                        "Opaque",
                        "Time",
                        "Objlnk"
                    ],
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsReusable": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "TypeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ResourceType.ResourceTypeRequest": {
            "properties": {
                "AccessType": {
                    "enum": [
                        "Read",
                        "Write",
                        "Execute",
                        "All"
                    ],
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsReusable": {
                    "type": "boolean"
                },
                "Mandatory": {
                    "type": "boolean"
                },
                "MultipleInstances": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Range": {
                    "type": "string"
                },
                "ResourceDataType": {
                    "enum": [
                        "String",
                        "Integer",
                        "Float",
                        "Boolean",
                        "Opaque",
                        "Time",
                        "Objlnk"
                    ],
                    "type": "string"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "TypeId": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Units": {
                    "type": "string"
                }
            },
            "required": [
                "SmartObjectTypeId",
                "Name",
                "TypeId",
                "ResourceDataType",
                "AccessType"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.ResourceType.ResourceTypeResponse": {
            "properties": {
                "AccessType": {
                    "enum": [
                        "Read",
                        "Write",
                        "Execute",
                        "All"
                    ],
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsReusable": {
                    "type": "boolean"
                },
                "Mandatory": {
                    "type": "boolean"
                },
                "MultipleInstances": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Range": {
                    "type": "string"
                },
                "ResourceDataType": {
                    "enum": [
                        "String",
                        "Integer",
                        "Float",
                        "Boolean",
                        "Opaque",
                        "Time",
                        "Objlnk"
                    ],
                    "type": "string"
                },
                "TypeId": {
                    "format": "int32",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "type": "integer"
                },
                "Units": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "TypeId",
                "ResourceDataType",
                "AccessType"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.ResourceTypeInstance.ResourceTypeInstanceRequest": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.ResourceTypeInstance.ResourceTypeInstanceResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Responsibility.ResponsibilityRequest": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Permissions": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.RolePermission.RolePermissionRequest"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Responsibility.ResponsibilityResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Permissions": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.RolePermission.RolePermissionResponse"
                    },
                    "type": "array"
                },
                "RoleIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Role.RoleResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Responsibilities": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Responsibility.ResponsibilityResponse"
                    },
                    "type": "array"
                },
                "TenantId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Role.SpecificRoleResponse": {
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.RolePermission.PermissionTypeName": {
            "properties": {
                "Name": {
                    "readOnly": true,
                    "type": "string"
                },
                "Type": {
                    "enum": [
                        "Entity",
                        "Custom"
                    ],
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.RolePermission.RolePermissionRequest": {
            "properties": {
                "EntityName": {
                    "type": "string"
                },
                "Permission": {
                    "enum": [
                        "Create",
                        "Read",
                        "Update",
                        "Delete",
                        "All"
                    ],
                    "type": "string"
                },
                "TenantId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.RolePermission.RolePermissionResponse": {
            "properties": {
                "EntityName": {
                    "type": "string"
                },
                "Permission": {
                    "enum": [
                        "Create",
                        "Read",
                        "Update",
                        "Delete",
                        "All"
                    ],
                    "type": "string"
                },
                "TenantId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Rule.RuleListResponse": {
            "properties": {
                "EventCategoryId": {
                    "format": "uuid",
                    "type": "string"
                },
                "EventCategoryName": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsDeactivated": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "SeverityLevel": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Rule.RuleRequest": {
            "properties": {
                "Condition": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "EventCategoryId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsDeactivated": {
                    "type": "boolean"
                },
                "Message": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "ResolutionId": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceCollectionId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SeverityLevel": {
                    "format": "int32",
                    "maximum": 5,
                    "minimum": 1,
                    "type": "integer"
                },
                "TriggerByDevice": {
                    "type": "boolean"
                },
                "TriggerBySmartObject": {
                    "type": "boolean"
                },
                "TriggerResetMethod": {
                    "enum": [
                        "Manually",
                        "Threshold"
                    ],
                    "type": "string"
                },
                "TriggerType": {
                    "enum": [
                        "OnlyFirstTime",
                        "ForEveryResource"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "ResourceCollectionId",
                "TriggerType"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Rule.RuleResourceConditionRequest": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResetMaxValue": {
                    "format": "double",
                    "type": "number"
                },
                "ResetMinValue": {
                    "format": "double",
                    "type": "number"
                },
                "ResetOperator": {
                    "enum": [
                        "Equals",
                        "NotEquals",
                        "GreaterThan",
                        "GreaterEqual",
                        "LowerThan",
                        "LowerEqual",
                        "InsideRange",
                        "InsideRangeStrict",
                        "OutsideRange",
                        "StringEquals",
                        "StringNotEquals",
                        "StringStartsWith",
                        "StringNotStartsWith",
                        "StringEndsWith",
                        "StringNotEndsWith",
                        "StringContains",
                        "StringNotContains",
                        "StringRegexMatch",
                        "StringNotRegexMatch",
                        "BooleanIsTrue",
                        "BooleanIsFalse",
                        "None"
                    ],
                    "type": "string"
                },
                "ResetStringValue": {
                    "type": "string"
                },
                "ResolutionAggregationType": {
                    "enum": [
                        "Realtime",
                        "TimeWeightedAverage",
                        "MaxValue",
                        "MinValue",
                        "StartValue",
                        "EndValue",
                        "TimeWeightedVariance",
                        "NbrOfMeasurements",
                        "Length",
                        "All",
                        "ArithmeticMean",
                        "Variance"
                    ],
                    "type": "string"
                },
                "ResolutionId": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "RuleId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "TriggerMaxValue": {
                    "format": "double",
                    "type": "number"
                },
                "TriggerMinValue": {
                    "format": "double",
                    "type": "number"
                },
                "TriggerOperator": {
                    "enum": [
                        "Equals",
                        "NotEquals",
                        "GreaterThan",
                        "GreaterEqual",
                        "LowerThan",
                        "LowerEqual",
                        "InsideRange",
                        "InsideRangeStrict",
                        "OutsideRange",
                        "StringEquals",
                        "StringNotEquals",
                        "StringStartsWith",
                        "StringNotStartsWith",
                        "StringEndsWith",
                        "StringNotEndsWith",
                        "StringContains",
                        "StringNotContains",
                        "StringRegexMatch",
                        "StringNotRegexMatch",
                        "BooleanIsTrue",
                        "BooleanIsFalse",
                        "None"
                    ],
                    "type": "string"
                },
                "TriggerStringValue": {
                    "type": "string"
                }
            },
            "required": [
                "RuleId",
                "SmartObjectTypeId",
                "ResourceTypeId",
                "TriggerOperator"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Rule.RuleResourceConditionResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResetMaxValue": {
                    "format": "double",
                    "type": "number"
                },
                "ResetMinValue": {
                    "format": "double",
                    "type": "number"
                },
                "ResetOperator": {
                    "enum": [
                        "Equals",
                        "NotEquals",
                        "GreaterThan",
                        "GreaterEqual",
                        "LowerThan",
                        "LowerEqual",
                        "InsideRange",
                        "InsideRangeStrict",
                        "OutsideRange",
                        "StringEquals",
                        "StringNotEquals",
                        "StringStartsWith",
                        "StringNotStartsWith",
                        "StringEndsWith",
                        "StringNotEndsWith",
                        "StringContains",
                        "StringNotContains",
                        "StringRegexMatch",
                        "StringNotRegexMatch",
                        "BooleanIsTrue",
                        "BooleanIsFalse",
                        "None"
                    ],
                    "type": "string"
                },
                "ResetStringValue": {
                    "type": "string"
                },
                "ResolutionAggregationType": {
                    "enum": [
                        "Realtime",
                        "TimeWeightedAverage",
                        "MaxValue",
                        "MinValue",
                        "StartValue",
                        "EndValue",
                        "TimeWeightedVariance",
                        "NbrOfMeasurements",
                        "Length",
                        "All",
                        "ArithmeticMean",
                        "Variance"
                    ],
                    "type": "string"
                },
                "ResolutionId": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "RuleId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "TriggerMaxValue": {
                    "format": "double",
                    "type": "number"
                },
                "TriggerMinValue": {
                    "format": "double",
                    "type": "number"
                },
                "TriggerOperator": {
                    "enum": [
                        "Equals",
                        "NotEquals",
                        "GreaterThan",
                        "GreaterEqual",
                        "LowerThan",
                        "LowerEqual",
                        "InsideRange",
                        "InsideRangeStrict",
                        "OutsideRange",
                        "StringEquals",
                        "StringNotEquals",
                        "StringStartsWith",
                        "StringNotStartsWith",
                        "StringEndsWith",
                        "StringNotEndsWith",
                        "StringContains",
                        "StringNotContains",
                        "StringRegexMatch",
                        "StringNotRegexMatch",
                        "BooleanIsTrue",
                        "BooleanIsFalse",
                        "None"
                    ],
                    "type": "string"
                },
                "TriggerStringValue": {
                    "type": "string"
                }
            },
            "required": [
                "RuleId",
                "SmartObjectTypeId",
                "ResourceTypeId",
                "TriggerOperator"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Rule.RuleResponse": {
            "properties": {
                "Condition": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "DeviceNetworkId": {
                    "format": "uuid",
                    "type": "string"
                },
                "EventCategoryId": {
                    "format": "uuid",
                    "type": "string"
                },
                "EventCategoryName": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsDeactivated": {
                    "type": "boolean"
                },
                "Message": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "ResolutionId": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceCollectionId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SeverityLevel": {
                    "format": "int32",
                    "maximum": 5,
                    "minimum": 1,
                    "type": "integer"
                },
                "TriggerByDevice": {
                    "type": "boolean"
                },
                "TriggerBySmartObject": {
                    "type": "boolean"
                },
                "TriggerResetMethod": {
                    "enum": [
                        "Manually",
                        "Threshold"
                    ],
                    "type": "string"
                },
                "TriggerType": {
                    "enum": [
                        "OnlyFirstTime",
                        "ForEveryResource"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "ResourceCollectionId",
                "TriggerType"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Security.AccessTicket": {
            "properties": {
                "AmqpSas": {
                    "type": "string"
                },
                "AmqpServicePath": {
                    "type": "string"
                },
                "AmqpServiceUri": {
                    "type": "string"
                },
                "ExpireDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "HttpSas": {
                    "type": "string"
                },
                "HttpServicePath": {
                    "type": "string"
                },
                "HttpServiceUri": {
                    "type": "string"
                },
                "IssuedDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "IssuerName": {
                    "type": "string"
                },
                "Namespace": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Security.SecurityTokenRequest": {
            "properties": {
                "MacAddress": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Setting.SettingRequest": {
            "properties": {
                "CategoryId": {
                    "format": "uuid",
                    "type": "string"
                },
                "CategoryIsHardwareSettings": {
                    "type": "boolean"
                },
                "CategoryIsSecuritySettings": {
                    "type": "boolean"
                },
                "DataCollectorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DataType": {
                    "enum": [
                        "String",
                        "Integer",
                        "Boolean",
                        "HexString"
                    ],
                    "type": "string"
                },
                "DeviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsMandatory": {
                    "type": "boolean"
                },
                "IsPredefined": {
                    "type": "boolean"
                },
                "IsReadonly": {
                    "type": "boolean"
                },
                "Key": {
                    "type": "string"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Key",
                "CategoryId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Setting.SettingResponse": {
            "properties": {
                "CategoryId": {
                    "format": "uuid",
                    "type": "string"
                },
                "CategoryIsHardwareSettings": {
                    "type": "boolean"
                },
                "CategoryIsSecuritySettings": {
                    "type": "boolean"
                },
                "CategoryName": {
                    "type": "string"
                },
                "DataCollectorId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DataType": {
                    "enum": [
                        "String",
                        "Integer",
                        "Boolean",
                        "HexString"
                    ],
                    "type": "string"
                },
                "DeviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsInherited": {
                    "type": "boolean"
                },
                "IsMandatory": {
                    "type": "boolean"
                },
                "IsPredefined": {
                    "type": "boolean"
                },
                "IsReadonly": {
                    "type": "boolean"
                },
                "Key": {
                    "type": "string"
                },
                "LocationId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Key",
                "CategoryId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Setting.SettingValueRequest": {
            "properties": {
                "DataType": {
                    "enum": [
                        "String",
                        "Integer",
                        "Boolean",
                        "HexString"
                    ],
                    "type": "string"
                },
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.SettingCategory.SettingCategoryRequest": {
            "properties": {
                "DefaultSettings": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DefaultSetting.DefaultSettingRequest"
                    },
                    "type": "array"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsHardwareSettings": {
                    "type": "boolean"
                },
                "IsSecuritySettings": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.SettingCategory.SettingCategoryResponse": {
            "properties": {
                "DefaultSettings": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.DefaultSetting.DefaultSettingResponse"
                    },
                    "type": "array"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsHardwareSettings": {
                    "type": "boolean"
                },
                "IsSecuritySettings": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                }
            },
            "required": [
                "Name"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.SettingCategory.SettingCategoryValueRequest": {
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Settings": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingValueRequest"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObject.SmartObjectListResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "InstanceNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsUnavailable": {
                    "type": "boolean"
                },
                "IsVirtual": {
                    "type": "boolean"
                },
                "Label": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Tags": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Tag.TagResponse"
                    },
                    "type": "array"
                },
                "TypeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObject.SmartObjectRequest": {
            "properties": {
                "DeviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Label": {
                    "type": "string"
                },
                "SmartObjectTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "DeviceId",
                "SmartObjectTypeId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObject.SmartObjectResponse": {
            "properties": {
                "Description": {
                    "type": "string"
                },
                "DeviceId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "InstanceNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsUnavailable": {
                    "type": "boolean"
                },
                "Label": {
                    "type": "string"
                },
                "MultipleInstances": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "ObjectUrn": {
                    "type": "string"
                },
                "Resources": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.Resource.ResourceResponse"
                    },
                    "type": "array"
                },
                "SmartObjectTemplateId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                },
                "TypeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "DeviceId",
                "SmartObjectTypeId"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObjectTemplate.SmartObjectTemplateListResponse": {
            "properties": {
                "CanBeDeleted": {
                    "type": "boolean"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "ObjectId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeName": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObjectTemplate.SmartObjectTemplateRequest": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "ResourceTemplates": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceTemplate.ResourceTemplateRequest"
                    },
                    "type": "array"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObjectTemplate.SmartObjectTemplateResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "ResourceTemplates": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceTemplate.ResourceTemplateResponse"
                    },
                    "type": "array"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeName": {
                    "type": "string"
                },
                "TagIds": {
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeImportRequest": {
            "properties": {
                "Description": {
                    "type": "string"
                },
                "InstanceType": {
                    "type": "string"
                },
                "MultipleInstances": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "ObjectUrn": {
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "resourcedefs": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceType.ResourceTypeImportRequest"
                    },
                    "type": "array"
                }
            },
            "required": [
                "id",
                "InstanceType",
                "Name",
                "Description"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeListResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "NbrOfInstances": {
                    "format": "int32",
                    "type": "integer"
                },
                "NbrOfTemplates": {
                    "format": "int32",
                    "type": "integer"
                },
                "TypeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeRequest": {
            "properties": {
                "Description": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "MultipleInstances": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "ObjectUrn": {
                    "type": "string"
                },
                "TypeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "Name",
                "TypeId",
                "ObjectUrn",
                "Description"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeResponse": {
            "properties": {
                "Description": {
                    "type": "string"
                },
                "DeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "DeviceTypeName": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "MultipleInstances": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "ObjectUrn": {
                    "type": "string"
                },
                "ResourceTypes": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceType.ResourceTypeResponse"
                    },
                    "type": "array"
                },
                "SmartObjectTemplates": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectTemplate.SmartObjectTemplateResponse"
                    },
                    "type": "array"
                },
                "TypeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "Name",
                "TypeId",
                "ObjectUrn",
                "Description"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeWithTemplatesResponse": {
            "properties": {
                "SelectedSmartObjectTemplate": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectTemplate.SmartObjectTemplateResponse"
                },
                "SmartObjectTemplates": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectTemplate.SmartObjectTemplateResponse"
                    },
                    "type": "array"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeName": {
                    "type": "string"
                },
                "SmartObjectTypeTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "UsedSmartObjectTypeInstanceIds": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectTypeInstanceId.SmartObjectTypeInstanceIdResponse"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObjectTypeInstanceId.SmartObjectTypeInstanceIdRequest": {
            "properties": {
                "DeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "InstanceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Label": {
                    "type": "string"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.SmartObjectTypeInstanceId.SmartObjectTypeInstanceIdResponse": {
            "properties": {
                "DeviceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "InstanceId": {
                    "format": "int32",
                    "type": "integer"
                },
                "Label": {
                    "type": "string"
                },
                "SmartObjectType": {
                    "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeResponse"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.System.SiloStatistics": {
            "properties": {
                "ActivationCount": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "AvailableMemory": {
                    "format": "float",
                    "readOnly": true,
                    "type": "number"
                },
                "ClientCount": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "CpuUsage": {
                    "format": "float",
                    "readOnly": true,
                    "type": "number"
                },
                "DateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "IsOverloaded": {
                    "readOnly": true,
                    "type": "boolean"
                },
                "MemoryUsage": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "ReceiveQueueLength": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "ReceivedMessages": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "RecentlyUsedActivationCount": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "RequestQueueLength": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "SendQueueLength": {
                    "format": "int32",
                    "readOnly": true,
                    "type": "integer"
                },
                "SentMessages": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                },
                "TotalPhysicalMemory": {
                    "format": "int64",
                    "readOnly": true,
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Tag.TagRequest": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Tag.TagResponse": {
            "properties": {
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsInherited": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.Tenant.TenantResponse": {
            "properties": {
                "CompanyRegistrationId": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "ExternalId": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "NameSpace": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerTemplate.TransformerSourceTypeConfigurationModel": {
            "properties": {
                "Aggregation": {
                    "enum": [
                        "Realtime",
                        "TimeWeightedAverage",
                        "MaxValue",
                        "MinValue",
                        "StartValue",
                        "EndValue",
                        "TimeWeightedVariance",
                        "NbrOfMeasurements",
                        "Length",
                        "All",
                        "ArithmeticMean",
                        "Variance"
                    ],
                    "type": "string"
                },
                "ResolutionId": {
                    "format": "uuid",
                    "type": "string"
                },
                "ResourceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeInstanceId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerTemplate.TransformerTargetTypeConfigurationModel": {
            "properties": {
                "OutputIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "ResourceDataType": {
                    "enum": [
                        "String",
                        "Integer",
                        "Float",
                        "Boolean",
                        "Opaque",
                        "Time",
                        "Objlnk"
                    ],
                    "type": "string"
                },
                "ResourceTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "SmartObjectTypeId": {
                    "format": "uuid",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerTemplate.TransformerTemplateRequest": {
            "properties": {
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.ConfigurationItem"
                    },
                    "type": "array"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Transformer": {
                    "type": "string"
                },
                "TransformerSourceTypeConfigurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerTemplate.TransformerSourceTypeConfigurationModel"
                    },
                    "type": "array"
                },
                "TransformerTargetTypeConfigurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerTemplate.TransformerTargetTypeConfigurationModel"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name",
                "Transformer",
                "TransformerSourceTypeConfigurations",
                "TransformerTargetTypeConfigurations"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerTemplate.TransformerTemplateResponse": {
            "properties": {
                "Configurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.General.ConfigurationItem"
                    },
                    "type": "array"
                },
                "Deactivated": {
                    "type": "boolean"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "SourceResourceCollectionId": {
                    "format": "uuid",
                    "type": "string"
                },
                "Transformer": {
                    "type": "string"
                },
                "TransformerSourceTypeConfigurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerTemplate.TransformerSourceTypeConfigurationModel"
                    },
                    "type": "array"
                },
                "TransformerTargetTypeConfigurations": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerTemplate.TransformerTargetTypeConfigurationModel"
                    },
                    "type": "array"
                }
            },
            "required": [
                "Name",
                "Transformer",
                "TransformerSourceTypeConfigurations",
                "TransformerTargetTypeConfigurations"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerType.TransformerSourceTypeDefinition": {
            "properties": {
                "Description": {
                    "type": "string"
                },
                "MaxNumberOfResources": {
                    "format": "int32",
                    "type": "integer"
                },
                "MinNumberOfResources": {
                    "format": "int32",
                    "type": "integer"
                },
                "ResourceTypeTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SmartObjectTypeTypeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerType.TransformerTargetTypeDefinition": {
            "properties": {
                "Description": {
                    "type": "string"
                },
                "OutputIndex": {
                    "format": "int32",
                    "type": "integer"
                },
                "ResourceDataType": {
                    "enum": [
                        "String",
                        "Integer",
                        "Float",
                        "Boolean",
                        "Opaque",
                        "Time",
                        "Objlnk"
                    ],
                    "type": "string"
                },
                "ResourceTypeTypeId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SmartObjectTypeTypeId": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerType.TransformerTypeConfigurationDefinition": {
            "properties": {
                "DataType": {
                    "enum": [
                        "Boolean",
                        "String",
                        "Int",
                        "Double",
                        "Enum"
                    ],
                    "type": "string"
                },
                "DefaultValue": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Key": {
                    "type": "string"
                },
                "MaxValue": {
                    "format": "double",
                    "type": "number"
                },
                "MinValue": {
                    "format": "double",
                    "type": "number"
                },
                "Name": {
                    "type": "string"
                },
                "Options": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerType.TransformerTypeConfigurationDefinitionOptionEnum"
                    },
                    "type": "array"
                },
                "RegExp": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerType.TransformerTypeConfigurationDefinitionOptionEnum": {
            "properties": {
                "DisplayName": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerType.TransformerTypeExternalLinkRequest": {
            "properties": {
                "Label": {
                    "type": "string"
                },
                "Link": {
                    "type": "string"
                }
            },
            "required": [
                "Label",
                "Link"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerType.TransformerTypeExternalLinkResponse": {
            "properties": {
                "Label": {
                    "type": "string"
                },
                "Link": {
                    "type": "string"
                }
            },
            "required": [
                "Label",
                "Link"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerType.TransformerTypeListResponse": {
            "properties": {
                "ApprovalStatus": {
                    "enum": [
                        "Unknown",
                        "New",
                        "Revoked",
                        "Appoved"
                    ],
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Preview": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerType.TransformerTypeRequest": {
            "properties": {
                "Description": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "TransformerTypeExternalLinks": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerType.TransformerTypeExternalLinkRequest"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "Sigma.Sensation.DTO.TransformerType.TransformerTypeResponse": {
            "properties": {
                "ApprovalStatus": {
                    "enum": [
                        "Unknown",
                        "New",
                        "Revoked",
                        "Appoved"
                    ],
                    "type": "string"
                },
                "ConfigurationDefinitions": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerType.TransformerTypeConfigurationDefinition"
                    },
                    "type": "array"
                },
                "Description": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "FileName": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "IsActivated": {
                    "type": "boolean"
                },
                "Name": {
                    "type": "string"
                },
                "Preview": {
                    "type": "boolean"
                },
                "RevokeMotivation": {
                    "type": "string"
                },
                "SourceTypeDefinitions": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerType.TransformerSourceTypeDefinition"
                    },
                    "type": "array"
                },
                "TargetTypeDefinitions": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerType.TransformerTargetTypeDefinition"
                    },
                    "type": "array"
                },
                "TransformerTypeExternalLinks": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerType.TransformerTypeExternalLinkResponse"
                    },
                    "type": "array"
                }
            },
            "required": [
                "DisplayName",
                "FileName"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.UserAccount.UserAccountResponse": {
            "properties": {
                "ExternalId": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "PreferredDeviceNetwork": {
                    "format": "uuid",
                    "type": "string"
                },
                "Tenant": {
                    "format": "uuid",
                    "type": "string"
                },
                "ThumbnailPhoto": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                }
            },
            "required": [
                "Username",
                "Name",
                "PreferredDeviceNetwork",
                "Tenant"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.UserResponse": {
            "properties": {
                "AccountEmail": {
                    "type": "string"
                },
                "Id": {
                    "format": "uuid",
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Roles": {
                    "items": {
                        "$ref": "#/definitions/Sigma.Sensation.DTO.AdGroupResponse"
                    },
                    "type": "array"
                },
                "TemporaryPassword": {
                    "type": "string"
                }
            },
            "required": [
                "Name",
                "AccountEmail"
            ],
            "type": "object"
        },
        "Sigma.Sensation.DTO.Version.VersionResponse": {
            "properties": {
                "Branch": {
                    "type": "string"
                },
                "BuildDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "BuildNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "DeploymentId": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Revision": {
                    "type": "string"
                },
                "Version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "System.Void": {
            "properties": {},
            "type": "object"
        }
    },
    "info": {
        "description": "API for administration of your devices",
        "title": "Device Management Administration API",
        "version": "3"
    },
    "paths": {
        "/api/v3/Permissions": {
            "get": {
                "consumes": [],
                "operationId": "Permission_Get",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.RolePermission.PermissionTypeName"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a list of all Permissions in the DeviceNetwork",
                "tags": [
                    "Permission"
                ]
            }
        },
        "/api/v3/Responsibilities": {
            "get": {
                "consumes": [],
                "operationId": "Responsibility_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Responsibility.ResponsibilityResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of Responsibilities",
                "tags": [
                    "Responsibility"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Responsibility_Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "responsibilityRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Responsibility.ResponsibilityRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Responsibility created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created Responsibility",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "Responsibility"
                ]
            }
        },
        "/api/v3/Responsibilities/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "Responsibility_Delete",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Responsibility not found"
                    }
                },
                "tags": [
                    "Responsibility"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "Responsibility_Get",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Responsibility.ResponsibilityResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Responsibility not found"
                    }
                },
                "tags": [
                    "Responsibility"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Responsibility_Put",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "responsibilityRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Responsibility.ResponsibilityRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Responsibility not found"
                    }
                },
                "tags": [
                    "Responsibility"
                ]
            }
        },
        "/api/v3/activitylogs": {
            "get": {
                "consumes": [],
                "operationId": "ActivityLog_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.ActivityLog.ActivityLogEntryResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "ActivityLog"
                ]
            }
        },
        "/api/v3/activitylogs/archive/{id}": {
            "put": {
                "consumes": [],
                "operationId": "ActivityLog_RunArchiver",
                "parameters": [
                    {
                        "description": "The selected device network",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceNetwork not found"
                    }
                },
                "summary": "Archives all activity logs for\r\nthe selected device network.",
                "tags": [
                    "ActivityLog"
                ]
            }
        },
        "/api/v3/activitylogs/archiveall": {
            "put": {
                "consumes": [],
                "operationId": "ActivityLog_RunArchiverForAll",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Archives all activity logs in database i.e.\r\nfor all device networks.",
                "tags": [
                    "ActivityLog"
                ]
            }
        },
        "/api/v3/activitylogs/deleteall": {
            "delete": {
                "consumes": [],
                "operationId": "ActivityLog_DeleteAll",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "ActivityLog"
                ]
            }
        },
        "/api/v3/activitylogs/deletealloutdated": {
            "delete": {
                "consumes": [],
                "operationId": "ActivityLog_DeleteAllOutdated",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Deletes all outdated activity logs i.e.\r\nfor all device networks.",
                "tags": [
                    "ActivityLog"
                ]
            }
        },
        "/api/v3/activitylogs/deleteoutdated/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "ActivityLog_DeleteOutdated",
                "parameters": [
                    {
                        "description": "The selected device network",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "Outdated ActivityLogs was deleted on the device network",
                        "schema": {
                            "$ref": "#/definitions/System.Void"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Deletes all outdated activity logs for\r\nthe selected device network.",
                "tags": [
                    "ActivityLog"
                ]
            }
        },
        "/api/v3/activitylogs/download/{deviceNetworkId}": {
            "get": {
                "consumes": [],
                "operationId": "ActivityLog_DownloadArchived",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "deviceNetworkId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "fromDate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "toDate",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "204": {
                        "description": "No logs to download"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceNetwork not found"
                    }
                },
                "summary": "Fetches all archived activity logs in the Device Network in the given timespan.\r\nThe data is output as a zip file containing csv files.\r\nThe start and end date of the time span are given in milliseconds since\r\nJanuary 1 1970.",
                "tags": [
                    "ActivityLog"
                ]
            }
        },
        "/api/v3/activitylogs/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "ActivityLog_Delete",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ActivityLogEntry not found"
                    }
                },
                "tags": [
                    "ActivityLog"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "ActivityLog_Get",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ActivityLog.ActivityLogEntryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ActivityLogEntry not found"
                    }
                },
                "tags": [
                    "ActivityLog"
                ]
            }
        },
        "/api/v3/actuators": {
            "get": {
                "consumes": [],
                "operationId": "Actuator_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Actuator.ActuatorListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of Actuators",
                "tags": [
                    "Actuator"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Actuator_Post",
                "parameters": [
                    {
                        "description": "Actuator properties",
                        "in": "body",
                        "name": "actuatorRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Actuator.ActuatorRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Actuator created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created Actuator",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a new Actuator entity",
                "tags": [
                    "Actuator"
                ]
            }
        },
        "/api/v3/actuators/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "Actuator_Delete",
                "parameters": [
                    {
                        "description": "Actuator entity",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Actuator not found"
                    }
                },
                "summary": "Removes an Actuator entity",
                "tags": [
                    "Actuator"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "Actuator_Get",
                "parameters": [
                    {
                        "description": "Actuator ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Actuator.ActuatorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Actuator not found"
                    }
                },
                "summary": "Returns a single Actuator",
                "tags": [
                    "Actuator"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Actuator_Put",
                "parameters": [
                    {
                        "description": "Actuator ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Actuator properties",
                        "in": "body",
                        "name": "actuatorRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Actuator.ActuatorRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Actuator not found"
                    }
                },
                "summary": "Updates an Actuator entity",
                "tags": [
                    "Actuator"
                ]
            }
        },
        "/api/v3/actuators/{id}/actuate": {
            "post": {
                "consumes": [],
                "operationId": "Actuator_TriggerActuation",
                "parameters": [
                    {
                        "description": "Actuator ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Actuator not found"
                    }
                },
                "summary": "Sends a command to the Actuator",
                "tags": [
                    "Actuator"
                ]
            }
        },
        "/api/v3/barcode": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Barcode_Parse",
                "parameters": [
                    {
                        "description": "",
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "Barcode successfully parsed",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceNetwork.BarcodeParserResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Parses Sens Barcode data into Hardware type, Mac Address and checks if the device is registered in the Device\r\nNetwork",
                "tags": [
                    "Barcode"
                ]
            }
        },
        "/api/v3/dataCollectorTemplates": {
            "get": {
                "consumes": [],
                "operationId": "DataCollectorTemplate_Get",
                "parameters": [
                    {
                        "description": "Hardware Type ID of Data Collector",
                        "format": "int32",
                        "in": "query",
                        "name": "hardwareTypeId",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of DataCollectorTemplates",
                "tags": [
                    "DataCollectorTemplate"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollectorTemplate_Post",
                "parameters": [
                    {
                        "description": "Data Collector Template properties",
                        "in": "body",
                        "name": "dataCollectorTemplate",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "DataCollectorTemplate created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created DataCollectorTemplate",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollectorType not found"
                    }
                },
                "summary": "Creates a Data Collector Template",
                "tags": [
                    "DataCollectorTemplate"
                ]
            }
        },
        "/api/v3/dataCollectorTemplates/export": {
            "get": {
                "consumes": [],
                "operationId": "DataCollectorTemplate_Export",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "ids",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateExportResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollectorTemplate not found"
                    }
                },
                "tags": [
                    "DataCollectorTemplate"
                ]
            }
        },
        "/api/v3/dataCollectorTemplates/import": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollectorTemplate_Import",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateImportRequest"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "DataCollectorTemplate"
                ]
            }
        },
        "/api/v3/dataCollectorTemplates/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "DataCollectorTemplate_Delete",
                "parameters": [
                    {
                        "description": "Data Collector Template ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollectorTemplate not found"
                    }
                },
                "summary": "Removes a Data Collector Template",
                "tags": [
                    "DataCollectorTemplate"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "DataCollectorTemplate_Get",
                "parameters": [
                    {
                        "description": "Data Collector Template ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollectorTemplate not found"
                    }
                },
                "summary": "Returns a single DataCollectorTemplate",
                "tags": [
                    "DataCollectorTemplate"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded",
                    "application/json-patch+json"
                ],
                "operationId": "DataCollectorTemplate_Patch",
                "parameters": [
                    {
                        "description": "DataCollectorTemplate ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JsonPatch.JsonPatchDocument[Sigma.Sensation.DTO.DataCollector.DataCollectorTemplatePatch]"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceTemplate not found"
                    }
                },
                "summary": "Patch for DataCollectorTemplate entity. Follows RFC6902.\r\nPreview, supports only InternalDeviceTemplate updates.\r\nPermission \"DataCollectorTemplate\" write.",
                "tags": [
                    "DataCollectorTemplate"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollectorTemplate_Put",
                "parameters": [
                    {
                        "description": "Data Collector Template ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Data Collector Template properties",
                        "in": "body",
                        "name": "dataCollectorTemplate",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollectorType not found"
                    }
                },
                "summary": "Modifies a Data Collector Template. It is possible to update\r\nthe Contact Lost Threshold, change the Internal Device Template,\r\nset values to Setting Categories and modify the Tags collection.",
                "tags": [
                    "DataCollectorTemplate"
                ]
            }
        },
        "/api/v3/dataCollectorTemplates/{id}/settingcategory/{settingCategoryId}/setting/{settingId}/value": {
            "delete": {
                "consumes": [],
                "operationId": "DataCollectorTemplate_RemoveSettingCategoryValue",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingCategoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Setting not found"
                    }
                },
                "summary": "Removes an overridden setting value",
                "tags": [
                    "DataCollectorTemplate"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollectorTemplate_AddSettingCategoryValue",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingCategoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DataCollectorTemplateSettingValueRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DefaultSetting not found"
                    },
                    "409": {
                        "description": "SettingValue exists"
                    }
                },
                "summary": "Adds an override setting value to a default setting in a settingCategory",
                "tags": [
                    "DataCollectorTemplate"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollectorTemplate_UpdateSettingCategoryValue",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingCategoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DataCollectorTemplateSettingValueRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Setting not found"
                    }
                },
                "summary": "Updates an overridden setting value",
                "tags": [
                    "DataCollectorTemplate"
                ]
            }
        },
        "/api/v3/dataCollectorTypes": {
            "get": {
                "consumes": [],
                "operationId": "DataCollectorType_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorTypeResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list with registered Data Collector Types in the DeviceNetwork",
                "tags": [
                    "DataCollectorType"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollectorType_Post",
                "parameters": [
                    {
                        "description": "Data Collector Type properties",
                        "in": "body",
                        "name": "dataCollector",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTypeCreateRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "DataCollectorType created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created DataCollectorType",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SettingCategory not found"
                    }
                },
                "summary": "Creates a new Data Collector Type",
                "tags": [
                    "DataCollectorType"
                ]
            }
        },
        "/api/v3/dataCollectorTypes/export": {
            "get": {
                "consumes": [],
                "operationId": "DataCollectorType_Export",
                "parameters": [
                    {
                        "collectionFormat": "multi",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "ids",
                        "required": true,
                        "type": "array"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTypeExportResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollectorType not found"
                    }
                },
                "tags": [
                    "DataCollectorType"
                ]
            }
        },
        "/api/v3/dataCollectorTypes/obsolete/import": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollectorType_Import",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTypeImportRequest"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "DataCollectorType"
                ]
            }
        },
        "/api/v3/dataCollectorTypes/withMetrics": {
            "get": {
                "consumes": [],
                "operationId": "DataCollectorType_GetWithMetrics",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorTypeListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list with registered Data Collector Types with metrics in the DeviceNetwork",
                "tags": [
                    "DataCollectorType"
                ]
            }
        },
        "/api/v3/dataCollectorTypes/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "DataCollectorType_Delete",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollectorType not found"
                    }
                },
                "summary": "Removes a Data Collector Type",
                "tags": [
                    "DataCollectorType"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "DataCollectorType_Get",
                "parameters": [
                    {
                        "description": "Data Collector Type ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTypeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollectorType not found"
                    }
                },
                "summary": "Returns a single Data Collector Type",
                "tags": [
                    "DataCollectorType"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded",
                    "application/json-patch+json"
                ],
                "operationId": "DataCollectorType_Patch",
                "parameters": [
                    {
                        "description": "DataCollectorType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JsonPatch.JsonPatchDocument[Sigma.Sensation.DTO.DataCollector.DataCollectorTypePatch]"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceType not found"
                    }
                },
                "summary": "Patch for DataCollectorType entity. Follows RFC6902.\r\nPreview, supports only InternalDeviceType updates.\r\nPermission \"DataCollectorType\" write.",
                "tags": [
                    "DataCollectorType"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollectorType_Put",
                "parameters": [
                    {
                        "description": "Data Collector Type ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Data Collector Type properties",
                        "in": "body",
                        "name": "dataCollectorType",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorTypeRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollectorType not found"
                    }
                },
                "summary": "Updates an existing Data Collector Type",
                "tags": [
                    "DataCollectorType"
                ]
            }
        },
        "/api/v3/dataCollectorTypes/{id}/dataCollectorTemplates": {
            "get": {
                "consumes": [],
                "operationId": "DataCollectorType_GetDataCollectorTemplates",
                "parameters": [
                    {
                        "description": "Data Collector Type ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorTemplateResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of Data Collector Templates for a Data Collector Type\r\nPermission \"DataCollectorTemplate\" read",
                "tags": [
                    "DataCollectorType"
                ]
            }
        },
        "/api/v3/dataCollectorTypes/{id}/dataCollectors": {
            "get": {
                "consumes": [],
                "operationId": "DataCollectorType_GetDataCollectors",
                "parameters": [
                    {
                        "description": "Data Collector Type ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollectorType not found"
                    }
                },
                "summary": "Returns a paged list of registered Data Collectors of specified Data Collector Type in the DeviceNetwork",
                "tags": [
                    "DataCollectorType"
                ]
            }
        },
        "/api/v3/dataCollectorTypes/{id}/settingcategory/{settingCategoryId}": {
            "delete": {
                "consumes": [],
                "operationId": "DataCollectorType_RemoveSettingCategory",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingCategoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SettingCategory not found"
                    }
                },
                "summary": "",
                "tags": [
                    "DataCollectorType"
                ]
            },
            "post": {
                "consumes": [],
                "operationId": "DataCollectorType_AddSettingCategory",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingCategoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SettingCategory not found"
                    }
                },
                "summary": "",
                "tags": [
                    "DataCollectorType"
                ]
            }
        },
        "/api/v3/dataCollectors": {
            "get": {
                "consumes": [],
                "operationId": "DataCollector_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of DataCollectors in the DeviceNetwork based on the applied filters and search string.",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/register": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollector_Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "dataCollector",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "DataCollector created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created DataCollector",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Registers a new DataCollector.",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/securityToken": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollector_GetSecurityToken",
                "parameters": [
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Security.SecurityTokenRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Generates a Sens SecurityToken from a Mac Address",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "DataCollector_Delete",
                "parameters": [
                    {
                        "description": "Data Collector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "query",
                        "name": "force",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "summary": "Removes a DataCollector.\r\nThe Data Collector receives a delete request and on the response from the DataCollector the Data Collector entity\r\nand service bus is removed.\r\nIt's not possibly to remove a Data Collector with linked Sensor Collections.\r\nIf the force property is true the linked Sensor Collections is automatically removed and the entity and buses is\r\ndirectly removed. The data collector will not be noticed.",
                "tags": [
                    "DataCollector"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "DataCollector_Get",
                "parameters": [
                    {
                        "description": "Data Collector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "summary": "Returns a single Data Collector",
                "tags": [
                    "DataCollector"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollector_Put",
                "parameters": [
                    {
                        "description": "Data Collector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Updated entity",
                        "in": "body",
                        "name": "dataCollector",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.DataCollectorRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "summary": "Updates the configuration for the DataCollector.\r\nThe updated configuration is automatically sent to the Data Collector.",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/applicationrestart": {
            "post": {
                "consumes": [],
                "operationId": "DataCollector_SendDataCollectorApplicationRestart",
                "parameters": [
                    {
                        "description": "Data Collector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "summary": "Restarts the Data Collector application.",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/customCommand": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollector_PostCommand",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.CustomCommandRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/devices": {
            "get": {
                "consumes": [],
                "operationId": "DataCollector_GetDevices",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Device.DeviceListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "summary": "Returns a paged list of Devices for Gateway.",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/discoverdevices": {
            "post": {
                "consumes": [],
                "operationId": "DataCollector_SendDeviceDiscovery",
                "parameters": [
                    {
                        "description": "Data Collector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "summary": "Enables Device Discovery mode for the selected Data Collector for 60 seconds.\r\nThis will only work for data collectors that support the Device Discovery mode.",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/downloadregistrationTicket": {
            "post": {
                "consumes": [],
                "operationId": "DataCollector_DownloadRegistrationTicket",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/log": {
            "get": {
                "consumes": [],
                "operationId": "DataCollector_GetLogEntities",
                "parameters": [
                    {
                        "description": "Data Collector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Filter to filter out low prioritized events",
                        "enum": [
                            "Off",
                            "Error",
                            "Warning",
                            "Informational",
                            "Verbose"
                        ],
                        "in": "query",
                        "name": "minLogLevel",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of events to get, default 1000.",
                        "format": "int32",
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Earlies time to get events from, default latest available.",
                        "format": "int64",
                        "in": "query",
                        "name": "fromUnixtime",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Logging.LogResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "summary": "Get log posts written by the Data Collector or SensationBackend.",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/logfiles": {
            "get": {
                "consumes": [],
                "operationId": "DataCollector_GetLogFiles",
                "parameters": [
                    {
                        "description": "Data Collector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Logging.LogFileResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a list of Logfiles / dumps uploaded by the DataCollector to the blob storage.",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/positions": {
            "get": {
                "consumes": [],
                "operationId": "DataCollector_GetPositions",
                "parameters": [
                    {
                        "description": "Data Collector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Position.PositionItemResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of the DataCollectors position on LocationResources.\r\nPermission \"Position\" read.",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/refreshStatus": {
            "post": {
                "consumes": [],
                "operationId": "DataCollector_RefreshStatus",
                "parameters": [
                    {
                        "description": "Data Collector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "summary": "Sends a DataCollectorStatusRequest to the DataCollector",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/registrationTicket": {
            "get": {
                "consumes": [],
                "operationId": "DataCollector_GetRegistrationTicket",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DataCollector.RegistrationTicket"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "summary": "Returns the Data Collectors Registration tickets.\r\nThis calls needs the \"RegistrationTicket\" permission.",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/sendNetworkSettings": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollector_SendNetworkSettingsUpdatesToDataCollector",
                "parameters": [
                    {
                        "description": "Data Collector Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "List of networks settings id to send to the Data Collector",
                        "in": "body",
                        "name": "networksettings",
                        "required": true,
                        "schema": {
                            "items": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "summary": "Sends the latests Network Configurations to a DataCollector.",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/setblacklist": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DataCollector_SetBlacklist",
                "parameters": [
                    {
                        "description": "Data Collector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Flag that indicates if the datacollector should be blacklisted or not.",
                        "in": "body",
                        "name": "shouldBeBlacklisted",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "summary": "Sends a DataCollectorStatusRequest to the DataCollector",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/dataCollectors/{id}/systemrestart": {
            "post": {
                "consumes": [],
                "operationId": "DataCollector_SendDataCollectorRestart",
                "parameters": [
                    {
                        "description": "Data Collector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Data Collector not found"
                    }
                },
                "summary": "Restarts the Data Collector.",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/datacollectors/{id}/settings": {
            "get": {
                "consumes": [],
                "operationId": "Setting_GetByDataCollector",
                "parameters": [
                    {
                        "description": "DataCollector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollector not found"
                    }
                },
                "summary": "Returns a list of all settings for the DataCollector",
                "tags": [
                    "DataCollector"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Setting_AddSettingForDataCollector",
                "parameters": [
                    {
                        "description": "DataCollector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "setting",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Setting created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollector not found"
                    }
                },
                "summary": "Adds a setting to a DataCollector",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/datacollectors/{id}/settings/{settingId}": {
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Setting_UpdateSettingForDataCollector",
                "parameters": [
                    {
                        "description": "DataCollector ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Setting ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "setting",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollector or Setting not found"
                    }
                },
                "summary": "Updates a setting for a DataCollector",
                "tags": [
                    "DataCollector"
                ]
            }
        },
        "/api/v3/defaultsettings": {
            "get": {
                "consumes": [],
                "operationId": "DefaultSettings_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DefaultSetting.DefaultSettingResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of DefaultSettings",
                "tags": [
                    "DefaultSettings"
                ]
            }
        },
        "/api/v3/defaultsettings/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "DefaultSettings_Delete",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DefaultSetting not found"
                    }
                },
                "tags": [
                    "DefaultSettings"
                ]
            }
        },
        "/api/v3/deviceNetwork": {
            "get": {
                "consumes": [],
                "operationId": "DeviceNetwork_Get",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceNetwork.DeviceNetworkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns the current DeviceNetwork entity\r\nPermission \"DeviceNetwork\" Read.",
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetwork/RegenerateLocationResourceSvgs": {
            "post": {
                "consumes": [],
                "operationId": "DeviceNetwork_RegenerateLocationResourceSvgs",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Goes through all the LocationResources on the specific device network of the request, generates a SVG file for them\r\n, uploads that file to blob storage and saves a reference to it in the DB. These URL for these svg files can be\r\nfetched through the OData API.",
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetwork/ReinitializeRoles": {
            "post": {
                "consumes": [],
                "operationId": "DeviceNetwork_ReinitializeRoles",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetwork/SeedDatabase": {
            "post": {
                "consumes": [],
                "operationId": "DeviceNetwork_SeedDatabase",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetwork/SpecificRoles": {
            "get": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceNetwork_GetSpecificRoles",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Role.SpecificRoleResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "501": {
                        "description": "NotImplemented"
                    }
                },
                "summary": "Returns a paged list of Roles and their AD-ID for the current Device Network. Not implemented yet.",
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetwork/discoverdevices": {
            "post": {
                "consumes": [],
                "operationId": "DeviceNetwork_SendDeviceDiscovery",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Enables Device Discovery mode for all Data Collectors in the DeviceNetwork for 60 seconds.\r\nThis will only work for data collectors that support the Device Discovery mode.",
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetwork/list/SpecificRoles": {
            "get": {
                "consumes": [],
                "operationId": "DeviceNetwork_GetSpecificRolesList",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Role.SpecificRoleResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a list of Roles and their AD-ID for the current Device Network.",
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetwork/list/resolutions": {
            "get": {
                "consumes": [],
                "operationId": "DeviceNetwork_GetResolutionsList",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Resolution.ResolutionResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a list of resolutions in the Device Network.\r\nPermission \"Resolution\" Read.",
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetwork/permissions": {
            "get": {
                "consumes": [],
                "operationId": "DeviceNetwork_GetUsersPermissions",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "additionalProperties": {
                                "enum": [
                                    "Create",
                                    "Read",
                                    "Update",
                                    "Delete",
                                    "All"
                                ],
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Get the current users permission for DeviceNetwork\r\nNo permission check.",
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetwork/realtimeToken": {
            "post": {
                "consumes": [],
                "operationId": "DeviceNetwork_RequestRealTimeToken",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.RealTime.RealTimeToken"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Gets a token that can be used to the SignalR API to activate so that you can fetch data from it.",
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetwork/refreshDataCollectorStatuess": {
            "post": {
                "consumes": [],
                "operationId": "DeviceNetwork_RefreshDataCollectorStatus",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Sends a DataCollectorStatusRequest to all registred DataCollector",
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetwork/setupmonitors": {
            "post": {
                "consumes": [],
                "operationId": "DeviceNetwork_SetupMonitors",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetwork/setupsystemeventcategories": {
            "post": {
                "consumes": [],
                "operationId": "DeviceNetwork_SetupSystemEventCategories",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates System Event Categories such as \"Device lost contact\" or \"Gateway lost contact\" on the\r\nspecified device network.",
                "tags": [
                    "DeviceNetwork"
                ]
            }
        },
        "/api/v3/deviceNetworks": {
            "get": {
                "consumes": [],
                "operationId": "DeviceNetworks_Get",
                "parameters": [
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceNetwork.DeviceNetworkResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a List of DeviceNetwork in current Tenant.\r\nPermission \"DeviceNetwork\" Read.",
                "tags": [
                    "DeviceNetworks"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceNetworks_Post",
                "parameters": [
                    {
                        "description": "",
                        "in": "body",
                        "name": "deviceNetwork",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceNetwork.DeviceNetworkRequest"
                        }
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Device Network created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a new Device Network",
                "tags": [
                    "DeviceNetworks"
                ]
            }
        },
        "/api/v3/deviceNetworks/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "DeviceNetworks_Delete",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceNetwork not found"
                    }
                },
                "summary": "Removes a Device Network",
                "tags": [
                    "DeviceNetworks"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "DeviceNetworks_Get",
                "parameters": [
                    {
                        "description": "Device Network ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceNetwork.DeviceNetworkResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceNetwork not found"
                    }
                },
                "summary": "Returns a single Device Network",
                "tags": [
                    "DeviceNetworks"
                ]
            }
        },
        "/api/v3/devices": {
            "get": {
                "consumes": [],
                "operationId": "Device_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Device.DeviceListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of Devices.",
                "tags": [
                    "Device"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Device_Create",
                "parameters": [
                    {
                        "description": "The model of the Device to create",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Device.DeviceRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a new Device.",
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devices/bootstrapservernames": {
            "get": {
                "consumes": [],
                "operationId": "Device_GetBootstrapServerNames",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a list of available Bootstrap Server names.\r\nPermission \"Device\" read.",
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devices/datacollectorinternal/{dataCollectorId}": {
            "get": {
                "consumes": [],
                "operationId": "Device_GetDataCollectorInternalDevice",
                "parameters": [
                    {
                        "description": "Id of the DataCollector",
                        "format": "uuid",
                        "in": "path",
                        "name": "dataCollectorId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Device.DeviceResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollector not found"
                    }
                },
                "summary": "Returns the Gateway\u00b4s internal Device.",
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devices/discovered": {
            "get": {
                "consumes": [],
                "operationId": "Device_GetDeviceDiscoveryResult",
                "parameters": [
                    {
                        "description": "Device endpoint",
                        "in": "query",
                        "name": "endpoint",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Device.DeviceDiscoveryResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "summary": "Returns a list of Data Collectors that have recently discovered a Device by its endpoint.\r\nThe Data Collectors must be in Discovery Mode to receive discovery packages.",
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devices/endpoint": {
            "get": {
                "consumes": [],
                "operationId": "Device_GetByDeviceIdentifier",
                "parameters": [
                    {
                        "description": "Device endpoint",
                        "in": "query",
                        "name": "endpoint",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Device.DeviceResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "summary": "Returns a Device by its endpoint",
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devices/getByFilterSmall": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Device_GetByFilterSmall",
                "parameters": [
                    {
                        "description": "Filters the Device response",
                        "in": "body",
                        "name": "deviceFilter",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.DeviceFilterBase"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Device.DeviceFilterResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a filtered list of Devices.",
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devices/getmassregistrationtemplate": {
            "get": {
                "consumes": [],
                "operationId": "Device_GetMassRegistrationTemplate",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates and returns the excel file, used for the\r\nmass registration.",
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devices/multiple": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Device_CreateMultiple",
                "parameters": [
                    {
                        "description": "Collection of all Devices to create",
                        "in": "body",
                        "name": "requests",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Device.DeviceRequest"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Device.DeviceMassRegistrationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates multiple Devices.",
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devices/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "Device_Delete",
                "parameters": [
                    {
                        "description": "Id of the Device",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "summary": "Delete the specified Device.",
                "tags": [
                    "Device"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "Device_Get",
                "parameters": [
                    {
                        "description": "Device ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Device.DeviceResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "summary": "Returns a Device",
                "tags": [
                    "Device"
                ]
            },
            "patch": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded",
                    "application/json-patch+json"
                ],
                "operationId": "Device_Patch",
                "parameters": [
                    {
                        "description": "Device ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JsonPatch.JsonPatchDocument[Sigma.Sensation.DTO.Device.DevicePatch]"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "summary": "Patch for Device entity. Follows RFC6902.\r\nPreview, supports only Name and Location updates.\r\nPermission \"Device\" write.",
                "tags": [
                    "Device"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Device_Put",
                "parameters": [
                    {
                        "description": "Id of the Device",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The updated Device model",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Device.DeviceRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "summary": "Updates the Device.",
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devices/{id}/firmwareupgrade": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Device_UpgradeDeviceFirmware",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "firmwareUpgradeRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Device.FirmwareUpgradeRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devices/{id}/positions": {
            "get": {
                "consumes": [],
                "operationId": "Device_GetPositions",
                "parameters": [
                    {
                        "description": "Device Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Position.PositionItemResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "summary": "Returns a paged list of the Device\u00b4s positions on LocationResources.\r\nPermission \"Position\" read.",
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devices/{id}/settings": {
            "get": {
                "consumes": [],
                "operationId": "Setting_GetByDevice",
                "parameters": [
                    {
                        "description": "Device ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "summary": "Returns a list of all settings for the device",
                "tags": [
                    "Device"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Setting_AddSettingForDevice",
                "parameters": [
                    {
                        "description": "Device ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "setting",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Setting created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "summary": "Adds a setting to a Device",
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devices/{id}/settings/{settingId}": {
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Setting_UpdateSettingForDevice",
                "parameters": [
                    {
                        "description": "Device ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Setting ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "setting",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Device or Setting not found"
                    }
                },
                "summary": "Updates a setting for a Device",
                "tags": [
                    "Device"
                ]
            }
        },
        "/api/v3/devicetemplates": {
            "get": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceTemplate_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "501": {
                        "description": "NotImplemented"
                    }
                },
                "summary": "Returns a paged list of DeviceTemplates",
                "tags": [
                    "DeviceTemplate"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceTemplate_Post",
                "parameters": [
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "DeviceTemplate created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created DeviceTemplate",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceType not found"
                    }
                },
                "summary": "Creates a DeviceTemplate",
                "tags": [
                    "DeviceTemplate"
                ]
            }
        },
        "/api/v3/devicetemplates/list": {
            "get": {
                "consumes": [],
                "operationId": "DeviceTemplate_GetList",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateListResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a list of DeviceTemplates",
                "tags": [
                    "DeviceTemplate"
                ]
            }
        },
        "/api/v3/devicetemplates/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "DeviceTemplate_Delete",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceTemplate not found"
                    },
                    "409": {
                        "description": "Cannot delete the last DeviceTemplate for a DeviceType"
                    }
                },
                "summary": "Deletes a DeviceTemplate",
                "tags": [
                    "DeviceTemplate"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "DeviceTemplate_Get",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceTemplate not found"
                    }
                },
                "summary": "Returns a single DeviceTemplate",
                "tags": [
                    "DeviceTemplate"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceTemplate_Put",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceTemplate not found"
                    }
                },
                "summary": "Updates a DeviceTemplate",
                "tags": [
                    "DeviceTemplate"
                ]
            }
        },
        "/api/v3/devicetemplates/{id}/settingcategory/{settingCategoryId}/setting/{settingId}/value": {
            "delete": {
                "consumes": [],
                "operationId": "DeviceTemplate_RemoveSettingCategoryValue",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingCategoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Setting not found"
                    }
                },
                "summary": "Removes an overridden setting value",
                "tags": [
                    "DeviceTemplate"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceTemplate_AddSettingCategoryValue",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingCategoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateSettingValueRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceTemplate not found"
                    }
                },
                "summary": "Adds an override setting value to a default setting in a settingCategory",
                "tags": [
                    "DeviceTemplate"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceTemplate_UpdateSettingCategoryValue",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingCategoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateSettingValueRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DefaultSetting not found"
                    }
                },
                "summary": "Updates an overridden setting value",
                "tags": [
                    "DeviceTemplate"
                ]
            }
        },
        "/api/v3/devicetemplates/{id}/transformerTemplates": {
            "get": {
                "consumes": [],
                "operationId": "DeviceTemplate_GetTransformerTemplates",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerTemplate.TransformerTemplateResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "TransformerTemplate not found"
                    }
                },
                "summary": "Get a list of deviceTemplateTransformerTemplates",
                "tags": [
                    "DeviceTemplate"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceTemplate_AddTransformerTemplate",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerTemplate.TransformerTemplateRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceTemplate not found"
                    }
                },
                "summary": "Adds a transformer to a deviceTemplate",
                "tags": [
                    "DeviceTemplate"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceTemplate_SetTransformerTemplates",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "requests",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerTemplate.TransformerTemplateRequest"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerTemplate.TransformerTemplateResponse"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "TransformerTemplate not found"
                    }
                },
                "summary": "Add/update/remove a list of transformers on a deviceTemplate",
                "tags": [
                    "DeviceTemplate"
                ]
            }
        },
        "/api/v3/devicetemplates/{id}/transformerTemplates/{transformerTemplateId}": {
            "delete": {
                "consumes": [],
                "operationId": "DeviceTemplate_RemoveTransformerTemplate",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "transformerTemplateId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "TransformerTemplate not found"
                    }
                },
                "summary": "Removes a transformer from a deviceTemplate",
                "tags": [
                    "DeviceTemplate"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "DeviceTemplate_GetTransformerTemplate",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "transformerTemplateId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerTemplate.TransformerTemplateResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "TransformerTemplate not found"
                    }
                },
                "summary": "Get a deviceTemplateTransformerTemplate",
                "tags": [
                    "DeviceTemplate"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceTemplate_UpdateTransformerTemplate",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "transformerTemplateId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerTemplate.TransformerTemplateRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "TransformerTemplate not found"
                    }
                },
                "summary": "Updates a transformer to a deviceTemplate",
                "tags": [
                    "DeviceTemplate"
                ]
            }
        },
        "/api/v3/devicetypes": {
            "get": {
                "consumes": [],
                "operationId": "DeviceType_Get",
                "parameters": [
                    {
                        "description": "If metric (nbr of templates and nbr of instances) is included in response",
                        "in": "query",
                        "name": "includeMetrics",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DeviceType.DeviceTypeListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of DeviceTypes",
                "tags": [
                    "DeviceType"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceType_Post",
                "parameters": [
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceType.DeviceTypeRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "DeviceType created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created DeviceType",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SettingCategory not found"
                    }
                },
                "summary": "Creates a new DeviceType",
                "tags": [
                    "DeviceType"
                ]
            }
        },
        "/api/v3/devicetypes/list/{deviceTypeId}/templates": {
            "get": {
                "consumes": [],
                "operationId": "DeviceType_GetDeviceTemplatesForDeviceTypeList",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "deviceTypeId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateListResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceType not found"
                    }
                },
                "summary": "Returns a list of templates for a DeviceType",
                "tags": [
                    "DeviceType"
                ]
            }
        },
        "/api/v3/devicetypes/{deviceTypeId}/templates": {
            "get": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceType_GetDeviceTemplatesForDeviceType",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "deviceTypeId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DeviceTemplate.DeviceTemplateListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceType not found"
                    },
                    "501": {
                        "description": "NotImplemented"
                    }
                },
                "summary": "Returns a paged list of templates for a DeviceType",
                "tags": [
                    "DeviceType"
                ]
            }
        },
        "/api/v3/devicetypes/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "DeviceType_Delete",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceType not found"
                    }
                },
                "summary": "Deletes a DeviceType",
                "tags": [
                    "DeviceType"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "DeviceType_Get",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceType.DeviceTypeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DeviceType not found"
                    }
                },
                "summary": "Returns a single DeviceType",
                "tags": [
                    "DeviceType"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "DeviceType_Put",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceType.DeviceTypeRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SettingCategory not found"
                    }
                },
                "summary": "Updates a DeviceType",
                "tags": [
                    "DeviceType"
                ]
            }
        },
        "/api/v3/devicetypes/{id}/firmwarepackages": {
            "get": {
                "consumes": [],
                "operationId": "DeviceType_Get",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.FirmwarePackage.FirmwarePackageListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a list of all Firmware Packages for the DeviceType",
                "tags": [
                    "DeviceType"
                ]
            }
        },
        "/api/v3/devicetypes/{id}/settingcategories/{settingCategoryId}": {
            "delete": {
                "consumes": [],
                "operationId": "DeviceType_RemoveSettingCategory",
                "parameters": [
                    {
                        "description": "DeviceType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "SettingCategory ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingCategoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SettingCategory not found"
                    }
                },
                "summary": "Removes a SettingCategory from a DeviceType",
                "tags": [
                    "DeviceType"
                ]
            },
            "post": {
                "consumes": [],
                "operationId": "DeviceType_AddSettingCategory",
                "parameters": [
                    {
                        "description": "DeviceType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "SettingCategory ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingCategoryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SettingCategory not found"
                    }
                },
                "summary": "Adds a SettingCategory to a DeviceType",
                "tags": [
                    "DeviceType"
                ]
            }
        },
        "/api/v3/eventConsumers": {
            "get": {
                "consumes": [],
                "operationId": "EventConsumer_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.EventConsumer.EventConsumerResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of all EventConsumers in the Device Network.",
                "tags": [
                    "EventConsumer"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "EventConsumer_Post",
                "parameters": [
                    {
                        "description": "Event Consumer parameters",
                        "in": "body",
                        "name": "eventConsumer",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.EventConsumer.EventConsumerRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "EventConsumer created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created EventConsumer",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Inserts a new Event Consumer",
                "tags": [
                    "EventConsumer"
                ]
            }
        },
        "/api/v3/eventConsumers/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "EventConsumer_Delete",
                "parameters": [
                    {
                        "description": "Event Consumer ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "EventConsumer not found"
                    }
                },
                "summary": "Removes an EventConsumer",
                "tags": [
                    "EventConsumer"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "EventConsumer_Get",
                "parameters": [
                    {
                        "description": "Event Consumer ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.EventConsumer.EventConsumerResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "EventConsumer not found"
                    }
                },
                "summary": "Returns a single Event Consumer",
                "tags": [
                    "EventConsumer"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "EventConsumer_Put",
                "parameters": [
                    {
                        "description": "Event Consumer ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Event Consumer properties",
                        "in": "body",
                        "name": "eventConsumer",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.EventConsumer.EventConsumerRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "EventConsumer not found"
                    }
                },
                "summary": "Updates an Event Consumer entity",
                "tags": [
                    "EventConsumer"
                ]
            }
        },
        "/api/v3/eventConsumers/{id}/test": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "EventConsumer_PostMessage",
                "parameters": [
                    {
                        "description": "Event Consumer ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Test message",
                        "in": "body",
                        "name": "eventMessage",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Event.EventMessage"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "EventConsumer not found"
                    }
                },
                "summary": "Sends a test Event to the Event Consumer",
                "tags": [
                    "EventConsumer"
                ]
            }
        },
        "/api/v3/eventcategories": {
            "get": {
                "consumes": [],
                "operationId": "EventCategory_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.EventCategory.EventCategoryListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of EventCategories in DeviceNetwork.",
                "tags": [
                    "EventCategory"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "EventCategory_Post",
                "parameters": [
                    {
                        "description": "EventCategory parameters",
                        "in": "body",
                        "name": "eventCategory",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.EventCategory.EventCategoryRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "EventCategory created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created EventCategory",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a new EventCategory entity",
                "tags": [
                    "EventCategory"
                ]
            }
        },
        "/api/v3/eventcategories/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "EventCategory_Delete",
                "parameters": [
                    {
                        "description": "Event Category ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event Category not found"
                    }
                },
                "summary": "Removes a EventCategory entity",
                "tags": [
                    "EventCategory"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "EventCategory_Get",
                "parameters": [
                    {
                        "description": "Event Category ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.EventCategory.EventCategoryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event Category not found"
                    }
                },
                "summary": "Returns a single eventCategory",
                "tags": [
                    "EventCategory"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "EventCategory_Put",
                "parameters": [
                    {
                        "description": "EventCategory ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "EventCategory parameters",
                        "in": "body",
                        "name": "eventCategory",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.EventCategory.EventCategoryRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event Category not found"
                    }
                },
                "summary": "Updates a eventCategory entity",
                "tags": [
                    "EventCategory"
                ]
            }
        },
        "/api/v3/eventcategories/{id}/activeEvents": {
            "get": {
                "consumes": [],
                "operationId": "EventCategory_GetActiveEvents",
                "parameters": [
                    {
                        "description": "Event Category ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Event.EventResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event Category not found"
                    }
                },
                "summary": "Returns a paged list of Active Events for a given EventCategory.",
                "tags": [
                    "EventCategory"
                ]
            }
        },
        "/api/v3/eventcategories/{id}/actuators": {
            "get": {
                "consumes": [],
                "operationId": "EventCategory_GetActuators",
                "parameters": [
                    {
                        "description": "Event Category ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Actuator.ActuatorListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event Category not found"
                    }
                },
                "summary": "Returns a paged list of Actuators for a given EventCategory.\r\nPermission \"Actuator\" Read.",
                "tags": [
                    "EventCategory"
                ]
            }
        },
        "/api/v3/eventcategories/{id}/events": {
            "get": {
                "consumes": [],
                "operationId": "EventCategory_GetEvents",
                "parameters": [
                    {
                        "description": "Event Category ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Event.EventResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event Category not found"
                    }
                },
                "summary": "Returns a paged list of Events for a given EventCategory.\r\nPermission \"Event\" Read",
                "tags": [
                    "EventCategory"
                ]
            }
        },
        "/api/v3/eventcategories/{id}/rules": {
            "get": {
                "consumes": [],
                "operationId": "EventCategory_GetRules",
                "parameters": [
                    {
                        "description": "Event Category ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Rule.RuleListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event Category not found"
                    }
                },
                "summary": "Returns a paged list of Rules for a given EventCategory.\r\nPermission \"Rule\" Read.",
                "tags": [
                    "EventCategory"
                ]
            }
        },
        "/api/v3/events": {
            "get": {
                "consumes": [],
                "operationId": "Event_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Event.EventResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of Events.",
                "tags": [
                    "Event"
                ]
            }
        },
        "/api/v3/events/activeEvents": {
            "get": {
                "consumes": [],
                "operationId": "Event_GetActive",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Event.EventResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of Active Events in the DeviceNetwork.\r\nAn active event is an event that not have been reset.",
                "tags": [
                    "Event"
                ]
            }
        },
        "/api/v3/events/{id}": {
            "get": {
                "consumes": [],
                "operationId": "Event_Get",
                "parameters": [
                    {
                        "description": "Event ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Event.EventResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "summary": "Returns a single Event.",
                "tags": [
                    "Event"
                ]
            }
        },
        "/api/v3/events/{id}/reset": {
            "post": {
                "consumes": [],
                "operationId": "Event_ResetEvent",
                "parameters": [
                    {
                        "description": "Event ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "summary": "Manual reset of an event",
                "tags": [
                    "Event"
                ]
            }
        },
        "/api/v3/externalIds/{id}/datacollectors": {
            "get": {
                "consumes": [],
                "operationId": "ExternalId_GetDataCollectors",
                "parameters": [
                    {
                        "description": "External Id of DataCollector",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "DataCollector not found"
                    }
                },
                "summary": "Returns a paged list of DataCollectors based on External Id.\r\nPermissions \"DataCollector\" Read.",
                "tags": [
                    "ExternalId"
                ]
            }
        },
        "/api/v3/externalIds/{id}/locations": {
            "get": {
                "consumes": [],
                "operationId": "ExternalId_GetLocations",
                "parameters": [
                    {
                        "description": "External Id of Location",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Location.LocationResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "summary": "Returns a paged list of Locations based on the External Id.\r\nPermission \"Location\" read.",
                "tags": [
                    "ExternalId"
                ]
            }
        },
        "/api/v3/firmwarepackages": {
            "get": {
                "consumes": [],
                "operationId": "FirmwarePackage_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "pagedRequest.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "pagedRequest.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.FirmwarePackage.FirmwarePackageListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a list of all Firmware Packages",
                "tags": [
                    "FirmwarePackage"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "FirmwarePackage_Post",
                "parameters": [
                    {
                        "description": "Upload DeviceTypeAppiot file",
                        "in": "formData",
                        "name": "firmware",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "FirmwarePackageRequest",
                        "in": "formData",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.FirmwarePackage.FirmwarePackageRequest"
                        },
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Firmware Package created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created Firmware Package",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a new Firmware Package entity.",
                "tags": [
                    "FirmwarePackage"
                ]
            }
        },
        "/api/v3/firmwarepackages/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "FirmwarePackage_Delete",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Firmware Package not found"
                    }
                },
                "summary": "Delete a Firmware Package",
                "tags": [
                    "FirmwarePackage"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "FirmwarePackage_Get",
                "parameters": [
                    {
                        "description": "Firmware Package ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.FirmwarePackage.FirmwarePackageResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Firmware Package not found"
                    }
                },
                "summary": "Returns a single Firmware package entity.",
                "tags": [
                    "FirmwarePackage"
                ]
            }
        },
        "/api/v3/hardwareDefinitions/export": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "HardwareDefinitions_Export",
                "parameters": [
                    {
                        "in": "body",
                        "name": "exportDefinition",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ImportExportDefinitions.ExportDefinition"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "HardwareDefinitions"
                ]
            }
        },
        "/api/v3/hardwareDefinitions/import": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "HardwareDefinitions_Import",
                "parameters": [
                    {
                        "description": "Upload DeviceTypeAppiot file",
                        "in": "formData",
                        "name": "ImportDeviceTypes",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ImportExportDefinitions.ImportResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "HardwareDefinitions"
                ]
            }
        },
        "/api/v3/kpi/{resourceId}/{dimension}/since/{start}/untilNow": {
            "get": {
                "consumes": [],
                "operationId": "Kpi_GetDifferenceUntilNow",
                "parameters": [
                    {
                        "description": "Resource ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Resource Dimension",
                        "format": "int32",
                        "in": "path",
                        "name": "dimension",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Unix Timestamp in ms from where the measurements should start (only hour)",
                        "format": "int64",
                        "in": "path",
                        "name": "start",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "format": "double",
                            "type": "number"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Returns a list of raw measurements for a resource from a time until now",
                "tags": [
                    "Kpi"
                ]
            }
        },
        "/api/v3/locationResources": {
            "get": {
                "consumes": [],
                "operationId": "LocationResource_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.LocationResource.LocationResourceResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of Location Resources in Device Network",
                "tags": [
                    "LocationResource"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "LocationResource_Post",
                "parameters": [
                    {
                        "description": "Location Resources properties",
                        "in": "body",
                        "name": "locationResource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.LocationResource.LocationResourceRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Location created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created location resource",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a Location Resources",
                "tags": [
                    "LocationResource"
                ]
            }
        },
        "/api/v3/locationResources/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "LocationResource_Delete",
                "parameters": [
                    {
                        "description": "Location resources ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Removes a LocationResource",
                "tags": [
                    "LocationResource"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "LocationResource_Get",
                "parameters": [
                    {
                        "description": "Location Resources ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.LocationResource.LocationResourceWithPositionsResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a single Location Resources",
                "tags": [
                    "LocationResource"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "LocationResource_Put",
                "parameters": [
                    {
                        "description": "Location Resources ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Location resources properties",
                        "in": "body",
                        "name": "locationResource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.LocationResource.LocationResourceRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Updates an Location Resources",
                "tags": [
                    "LocationResource"
                ]
            }
        },
        "/api/v3/locationResources/{id}/RegenerateSvg": {
            "post": {
                "consumes": [],
                "operationId": "LocationResource_RegenerateSvg",
                "parameters": [
                    {
                        "description": "The id for the location resource to regenerate.",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Regenerates the SVG file for a specific location resource.",
                "tags": [
                    "LocationResource"
                ]
            }
        },
        "/api/v3/locationResources/{id}/positions": {
            "get": {
                "consumes": [],
                "operationId": "LocationResource_GetPositions",
                "parameters": [
                    {
                        "description": "Location Resources ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Position.PositionListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a list of positions located on a Location Resources",
                "tags": [
                    "LocationResource"
                ]
            }
        },
        "/api/v3/locationResources/{id}/svg": {
            "get": {
                "consumes": [],
                "operationId": "LocationResource_GetSvg",
                "parameters": [
                    {
                        "description": "Location Resources ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "image/svg+xml"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns an SVG file for a single Location Resources",
                "tags": [
                    "LocationResource"
                ]
            }
        },
        "/api/v3/locations": {
            "get": {
                "consumes": [],
                "operationId": "Location_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Location.LocationListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of Locations in the Device Network",
                "tags": [
                    "Location"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Location_Post",
                "parameters": [
                    {
                        "description": "Location properties",
                        "in": "body",
                        "name": "location",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Location.LocationRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Location created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a new Location",
                "tags": [
                    "Location"
                ]
            }
        },
        "/api/v3/locations/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "Location_Delete",
                "parameters": [
                    {
                        "description": "Location ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "summary": "Removes a Location",
                "tags": [
                    "Location"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "Location_Get",
                "parameters": [
                    {
                        "description": "Location ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Location.LocationResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "summary": "Returns a single Location",
                "tags": [
                    "Location"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Location_Put",
                "parameters": [
                    {
                        "description": "Location ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Location properties",
                        "in": "body",
                        "name": "location",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Location.LocationRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "summary": "Updates an Location",
                "tags": [
                    "Location"
                ]
            }
        },
        "/api/v3/locations/{id}/childDatacollectors": {
            "get": {
                "consumes": [],
                "operationId": "Location_GetChildDataCollectors",
                "parameters": [
                    {
                        "description": "Location ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "pagedRequest.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "pagedRequest.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "summary": "Returns a paged list of DataCollectors in a location and the selected locations sub-locations\r\nPermission \"DataCollector\" read",
                "tags": [
                    "Location"
                ]
            }
        },
        "/api/v3/locations/{id}/childDevices": {
            "get": {
                "consumes": [],
                "operationId": "Location_GetChildDevices",
                "parameters": [
                    {
                        "description": "Location ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Device.DeviceListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "summary": "Returns a paged list of Devices in a location and the selected locations sub-locations\r\nPermission \"Device\" read",
                "tags": [
                    "Location"
                ]
            }
        },
        "/api/v3/locations/{id}/datacollectors": {
            "get": {
                "consumes": [],
                "operationId": "Location_GetDataCollectors",
                "parameters": [
                    {
                        "description": "Location ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "pagedRequest.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "pagedRequest.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "summary": "Returns a paged list of DataCollectors in a location\r\nPermission \"DataCollector\" read",
                "tags": [
                    "Location"
                ]
            }
        },
        "/api/v3/locations/{id}/devices": {
            "get": {
                "consumes": [],
                "operationId": "Location_GetDevices",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Device.DeviceListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "summary": "Returns a paged list of Devices in a location.\r\nPermission \"Devices\" read.",
                "tags": [
                    "Location"
                ]
            }
        },
        "/api/v3/locations/{id}/locationresources": {
            "get": {
                "consumes": [],
                "operationId": "Location_GetLocationResources",
                "parameters": [
                    {
                        "description": "Location ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.LocationResource.LocationResourceWithPositionsResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "summary": "Returns a list of Location Resources positioned on this location",
                "tags": [
                    "Location"
                ]
            }
        },
        "/api/v3/locations/{id}/locations": {
            "get": {
                "consumes": [],
                "operationId": "Location_GetChildLocations",
                "parameters": [
                    {
                        "description": "Parent Location ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Location.LocationListResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "summary": "Returns a list of all sub locations to a Location",
                "tags": [
                    "Location"
                ]
            }
        },
        "/api/v3/locations/{id}/positions": {
            "get": {
                "consumes": [],
                "operationId": "Location_GetPositions",
                "parameters": [
                    {
                        "description": "Location ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Position.PositionItemResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of the Locations current positions on other Location Resources.\r\nRequired permission \"Position\" read",
                "tags": [
                    "Location"
                ]
            }
        },
        "/api/v3/locations/{id}/settings": {
            "get": {
                "consumes": [],
                "operationId": "Setting_GetByLocation",
                "parameters": [
                    {
                        "description": "Location ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "summary": "Returns a list of all settings for the location",
                "tags": [
                    "Location"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Setting_AddSettingForLocation",
                "parameters": [
                    {
                        "description": "Location ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "setting",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Setting created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "summary": "Adds a setting to a Location",
                "tags": [
                    "Location"
                ]
            }
        },
        "/api/v3/locations/{id}/settings/{settingId}": {
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Setting_UpdateSettingForLocation",
                "parameters": [
                    {
                        "description": "Location ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Setting ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "settingId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "setting",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Location or Setting not found"
                    }
                },
                "summary": "Updates a setting for a Location",
                "tags": [
                    "Location"
                ]
            }
        },
        "/api/v3/locations/{id}/transformer": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Location_CreateTransformer",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Location.LocationTransformerRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ResourceCollection not found"
                    }
                },
                "summary": "Adds a 'device transformer' to the location",
                "tags": [
                    "Location"
                ]
            }
        },
        "/api/v3/measurements/advanced": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Measurement_AdvancedMeasurementQuery",
                "parameters": [
                    {
                        "description": "Specification of query",
                        "in": "body",
                        "name": "advancedMeasurementQuery",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Measurement.AdvancedMeasurementQuery"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Measurement.AdvancedMeasurementQueryResponse"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Advanced Measurement/KPI query",
                "tags": [
                    "Measurement"
                ]
            }
        },
        "/api/v3/measurements/{resourceId}/aggregations": {
            "get": {
                "consumes": [],
                "operationId": "Measurement_GetAggregated",
                "parameters": [
                    {
                        "description": "Resource ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "measurementQuery.resolution",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "measurementQuery.timespanStart",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "measurementQuery.timespanEnd",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "enum": [
                            "Realtime",
                            "TimeWeightedAverage",
                            "MaxValue",
                            "MinValue",
                            "StartValue",
                            "EndValue",
                            "TimeWeightedVariance",
                            "NbrOfMeasurements",
                            "Length",
                            "All",
                            "ArithmeticMean",
                            "Variance"
                        ],
                        "in": "query",
                        "name": "measurementQuery.aggregationType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "UnixTimestampMS",
                            "ISO8601"
                        ],
                        "in": "query",
                        "name": "measurementQuery.dateFormat",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "measurementQuery.maximumNumberOfMeasurements",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Measurement.AggregatedMeasurements"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Returns a list of Aggregated Measurement",
                "tags": [
                    "Measurement"
                ]
            }
        },
        "/api/v3/measurements/{resourceId}/compressed": {
            "get": {
                "consumes": [],
                "operationId": "Measurement_GetCompressedMeasurements",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "measurementQuery.resolution",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "measurementQuery.timespanStart",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "measurementQuery.timespanEnd",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "enum": [
                            "Realtime",
                            "TimeWeightedAverage",
                            "MaxValue",
                            "MinValue",
                            "StartValue",
                            "EndValue",
                            "TimeWeightedVariance",
                            "NbrOfMeasurements",
                            "Length",
                            "All",
                            "ArithmeticMean",
                            "Variance"
                        ],
                        "in": "query",
                        "name": "measurementQuery.aggregationType",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "enum": [
                            "UnixTimestampMS",
                            "ISO8601"
                        ],
                        "in": "query",
                        "name": "measurementQuery.dateFormat",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "int64",
                        "in": "query",
                        "name": "measurementQuery.maximumNumberOfMeasurements",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "Measurement"
                ]
            }
        },
        "/api/v3/measurements/{resourceId}/since/{start}": {
            "get": {
                "consumes": [],
                "operationId": "Measurement_Get",
                "parameters": [
                    {
                        "description": "Resource ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Unix Timestamp in milliseconds from where the measurements should start",
                        "format": "int64",
                        "in": "path",
                        "name": "start",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Measurement.MinimalMeasurements"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Returns a list of raw measurements for a resource from a time until now (max 365 days)",
                "tags": [
                    "Measurement"
                ]
            }
        },
        "/api/v3/measurements/{resourceId}/since/{start}/to/{end}": {
            "get": {
                "consumes": [],
                "operationId": "Measurement_Get",
                "parameters": [
                    {
                        "description": "Resource ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "resourceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Unix Timestamp in milliseconds from where the measurements should start",
                        "format": "int64",
                        "in": "path",
                        "name": "start",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Unix Timestamp in milliseconds to where the measurements should end",
                        "format": "int64",
                        "in": "path",
                        "name": "end",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Measurement.MinimalMeasurements"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Returns a list of raw measurements for a time span\r\nMax 365 days / request",
                "tags": [
                    "Measurement"
                ]
            }
        },
        "/api/v3/networkSettings": {
            "get": {
                "consumes": [],
                "operationId": "NetworkSetting_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.NetworkSetting.NetworkSettingResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of Network Settings in the DeviceNetwork.",
                "tags": [
                    "NetworkSetting"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "NetworkSetting_Post",
                "parameters": [
                    {
                        "description": "Network settings parameters",
                        "in": "body",
                        "name": "setting",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.NetworkSetting.NetworkSettingRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "NetworkSetting created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created NetworkSetting",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a new Network Setting",
                "tags": [
                    "NetworkSetting"
                ]
            }
        },
        "/api/v3/networkSettings/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "NetworkSetting_Delete",
                "parameters": [
                    {
                        "description": "Network Setting ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "NetworkSetting not found"
                    }
                },
                "summary": "Removes a Network Setting",
                "tags": [
                    "NetworkSetting"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "NetworkSetting_Get",
                "parameters": [
                    {
                        "description": "Network Setting ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.NetworkSetting.NetworkSettingResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "NetworkSetting not found"
                    }
                },
                "summary": "Returns a single Network Setting",
                "tags": [
                    "NetworkSetting"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "NetworkSetting_Put",
                "parameters": [
                    {
                        "description": "Network Setting ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Network Settings parameter",
                        "in": "body",
                        "name": "setting",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.NetworkSetting.NetworkSettingUpdateRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "NetworkSetting not found"
                    }
                },
                "summary": "Updates an Network Setting",
                "tags": [
                    "NetworkSetting"
                ]
            }
        },
        "/api/v3/positions": {
            "get": {
                "consumes": [],
                "operationId": "Position_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Position.PositionResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of all Positions in the DeviceNetwork",
                "tags": [
                    "Position"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Position_Post",
                "parameters": [
                    {
                        "description": "Position properties",
                        "in": "body",
                        "name": "position",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Position.PositionRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Position created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created position",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a Position",
                "tags": [
                    "Position"
                ]
            }
        },
        "/api/v3/positions/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "Position_Delete",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Removes a position",
                "tags": [
                    "Position"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "Position_Get",
                "parameters": [
                    {
                        "description": "Position ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Position.PositionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a single Position",
                "tags": [
                    "Position"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Position_Put",
                "parameters": [
                    {
                        "description": "Position ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Position properties",
                        "in": "body",
                        "name": "position",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Position.PositionRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Updates a position",
                "tags": [
                    "Position"
                ]
            }
        },
        "/api/v3/resolutions": {
            "get": {
                "consumes": [],
                "operationId": "Resolution_GetByResourceTypeInstance",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "query",
                        "name": "smartObjectTypeId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "query",
                        "name": "resourceTypeId",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Resolution.ResolutionResponse"
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "Both smartObjectTypeId and resourceTypeId must have a value"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns all Resolutions, or all Resolutions linked to the combination of smartObjectTypeId and resourceTypeId, if\r\nspecified",
                "tags": [
                    "Resolution"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Resolution_Post",
                "parameters": [
                    {
                        "description": "Resolution properties",
                        "in": "body",
                        "name": "resolution",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Resolution.ResolutionRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resolution created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created Resolution",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a new Resolution\r\nThe resolutions needs to be synchronized before the resolution takes affects on existing sensors.",
                "tags": [
                    "Resolution"
                ]
            }
        },
        "/api/v3/resolutions/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "Resolution_Delete",
                "parameters": [
                    {
                        "description": "Resolution ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resolution not found"
                    }
                },
                "summary": "Removes a  resolution.\r\nThe resolution needs to be synchronized before the generation of data files is stopped on sensors.",
                "tags": [
                    "Resolution"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "Resolution_Get",
                "parameters": [
                    {
                        "description": "Resolution ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Resolution.ResolutionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resolution not found"
                    }
                },
                "summary": "Returns a single Resolution",
                "tags": [
                    "Resolution"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Resolution_Put",
                "parameters": [
                    {
                        "description": "Resolution ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Resolution properties",
                        "in": "body",
                        "name": "resolution",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Resolution.ResolutionRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resolution not found"
                    }
                },
                "summary": "Updates a resolution",
                "tags": [
                    "Resolution"
                ]
            }
        },
        "/api/v3/resourceModelDefinitions/export": {
            "get": {
                "consumes": [],
                "operationId": "ResourceModelDefinition_Get",
                "parameters": [
                    {
                        "description": "Time in ISO8601",
                        "format": "date-time",
                        "in": "query",
                        "name": "modifiedAfter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "format": "int64",
                        "in": "query",
                        "name": "smartObjectTypeId",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Time in Unixtime milliseconds",
                        "format": "int64",
                        "in": "query",
                        "name": "modifiedAfterTimestamp",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Ipso.SmartObjectDefinition"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "",
                "tags": [
                    "ResourceModelDefinition"
                ]
            }
        },
        "/api/v3/resourcecollections": {
            "get": {
                "consumes": [],
                "operationId": "ResourceCollection_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.ResourceCollection.ResourceCollectionListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of ResourceCollections",
                "tags": [
                    "ResourceCollection"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "ResourceCollection_Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceCollection.ResourceCollectionRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "ResourceCollection created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created ResourceCollection",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ResourceType not found"
                    }
                },
                "tags": [
                    "ResourceCollection"
                ]
            }
        },
        "/api/v3/resourcecollections/synchronize": {
            "post": {
                "consumes": [],
                "operationId": "ResourceCollection_Synchronize",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Manually updates the Resource references to the ResourceCollection\r\nbased on the current filters.\r\nIs always done when a ResourceCollection is updated.",
                "tags": [
                    "ResourceCollection"
                ]
            }
        },
        "/api/v3/resourcecollections/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "ResourceCollection_Delete",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ResourceCollection not found"
                    }
                },
                "tags": [
                    "ResourceCollection"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "ResourceCollection_Get",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceCollection.ResourceCollectionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ResourceCollection not found"
                    }
                },
                "tags": [
                    "ResourceCollection"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "ResourceCollection_Put",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceCollection.ResourceCollectionRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ResourceType not found"
                    }
                },
                "tags": [
                    "ResourceCollection"
                ]
            }
        },
        "/api/v3/resources": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Resource_Post",
                "parameters": [
                    {
                        "description": "Resource parameters",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Resource.ResourceRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Resource created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created resource",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SmartObject not found"
                    }
                },
                "summary": "Creates a resource",
                "tags": [
                    "Resource"
                ]
            }
        },
        "/api/v3/resources/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "Resource_Delete",
                "parameters": [
                    {
                        "description": "Resource ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Removes a resource",
                "tags": [
                    "Resource"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "Resource_Get",
                "parameters": [
                    {
                        "description": "Resource ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Resource.ResourceResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Returns a single Resource",
                "tags": [
                    "Resource"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Resource_Put",
                "parameters": [
                    {
                        "description": "Resource ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Resource parameters",
                        "in": "body",
                        "name": "resource",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Resource.ResourceRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Updates a resource",
                "tags": [
                    "Resource"
                ]
            }
        },
        "/api/v3/resources/{id}/cancelobserve": {
            "put": {
                "consumes": [],
                "operationId": "Resource_CancelObserveResource",
                "parameters": [
                    {
                        "description": "Resource id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Resource is not observable"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Sends a Cancel Observe request to the specified resource.",
                "tags": [
                    "Resource"
                ]
            }
        },
        "/api/v3/resources/{id}/execute": {
            "post": {
                "consumes": [],
                "operationId": "Resource_ExecuteResource",
                "parameters": [
                    {
                        "description": "Resource Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Resource is not executable"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Sends an Execute request to the specified resource.",
                "tags": [
                    "Resource"
                ]
            }
        },
        "/api/v3/resources/{id}/observe": {
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Resource_ObserveResource",
                "parameters": [
                    {
                        "description": "Resource identifier",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Parameters for observe request",
                        "in": "body",
                        "name": "observeRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Resource.ResourceObserveRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Sends an Observe request to the specified resource.\r\nA Cancel Observe request is automatically sent after the specified timeout in seconds.",
                "tags": [
                    "Resource"
                ]
            }
        },
        "/api/v3/resources/{id}/observestate": {
            "get": {
                "consumes": [],
                "operationId": "Resource_GetObserveState",
                "parameters": [
                    {
                        "description": "Resource Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Resource.ResourceObserveState"
                        }
                    },
                    "400": {
                        "description": "Resource is not observable"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Gets the current observe state.",
                "tags": [
                    "Resource"
                ]
            }
        },
        "/api/v3/resources/{id}/read": {
            "get": {
                "consumes": [],
                "operationId": "Resource_ReadResource",
                "parameters": [
                    {
                        "description": "Resource Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Resource is not readable"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Sends a Read request to the specified resource.",
                "tags": [
                    "Resource"
                ]
            }
        },
        "/api/v3/resources/{id}/write": {
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Resource_WriteToResource",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "writeRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Resource.ResourceWriteRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Sends a Write request to the specified resource with the specified value.",
                "tags": [
                    "Resource"
                ]
            }
        },
        "/api/v3/resources/{id}/write/{value}": {
            "post": {
                "consumes": [],
                "operationId": "Resource_WriteToResource",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "path",
                        "name": "value",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Resource is not writeable"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "summary": "Sends a Write request to the specified resource with the specified value.",
                "tags": [
                    "Resource"
                ]
            }
        },
        "/api/v3/resourcetypes": {
            "get": {
                "consumes": [],
                "operationId": "ResourceType_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.ResourceType.ResourceTypeListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of ResourceTypes",
                "tags": [
                    "ResourceType"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "ResourceType_Post",
                "parameters": [
                    {
                        "description": "ResourceType properties",
                        "in": "body",
                        "name": "resourceType",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceType.ResourceTypeRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "ResourceType created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created ResourceType",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a ResourceType",
                "tags": [
                    "ResourceType"
                ]
            }
        },
        "/api/v3/resourcetypes/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "ResourceType_Delete",
                "parameters": [
                    {
                        "description": "ResourceType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ResourceType not found"
                    }
                },
                "summary": "Removes a ResourceType",
                "tags": [
                    "ResourceType"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "ResourceType_Get",
                "parameters": [
                    {
                        "description": "ResourceType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceType.ResourceTypeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ResourceType not found"
                    }
                },
                "summary": "Returns a single ResourceType",
                "tags": [
                    "ResourceType"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "ResourceType_Put",
                "parameters": [
                    {
                        "description": "ResourceType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "ResourceType properties",
                        "in": "body",
                        "name": "resourceType",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ResourceType.ResourceTypeRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ResourceType not found"
                    }
                },
                "summary": "Updates a ResourceType",
                "tags": [
                    "ResourceType"
                ]
            }
        },
        "/api/v3/rules": {
            "get": {
                "consumes": [],
                "operationId": "Rule_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Rule.RuleListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of rules in Device Network",
                "tags": [
                    "Rule"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Rule_Post",
                "parameters": [
                    {
                        "description": "Rule parameters",
                        "in": "body",
                        "name": "rule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Rule.RuleRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "Rule created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created Rule",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a new rule entity",
                "tags": [
                    "Rule"
                ]
            }
        },
        "/api/v3/rules/list/{id}/conditions": {
            "get": {
                "consumes": [],
                "operationId": "Rule_GetRuleResourceConditionsList",
                "parameters": [
                    {
                        "description": "Rule ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Rule.RuleResourceConditionResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Rule not found"
                    }
                },
                "summary": "Returns all conditions for a rule",
                "tags": [
                    "Rule"
                ]
            }
        },
        "/api/v3/rules/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "Rule_Delete",
                "parameters": [
                    {
                        "description": "Rule ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Rule not found"
                    }
                },
                "summary": "Removes a rule entity",
                "tags": [
                    "Rule"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "Rule_Get",
                "parameters": [
                    {
                        "description": "Rule ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Rule.RuleResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Rule not found"
                    }
                },
                "summary": "Returns a single rule",
                "tags": [
                    "Rule"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Rule_Put",
                "parameters": [
                    {
                        "description": "Rule ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Rule parameters",
                        "in": "body",
                        "name": "rule",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Rule.RuleRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Rule not found"
                    }
                },
                "summary": "Updates a rule entity",
                "tags": [
                    "Rule"
                ]
            }
        },
        "/api/v3/rules/{id}/conditions": {
            "get": {
                "consumes": [],
                "operationId": "Rule_GetRuleResourceConditions",
                "parameters": [
                    {
                        "description": "Rule ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Rule.RuleResourceConditionResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Rule not found"
                    },
                    "501": {
                        "description": "NotImplemented"
                    }
                },
                "summary": "Returns a paged list of conditions for a rule",
                "tags": [
                    "Rule"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Rule_AddRuleResourceCondition",
                "parameters": [
                    {
                        "description": "Rule ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "ruleResourceCondition",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Rule.RuleResourceConditionRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Rule not found"
                    }
                },
                "summary": "Adds a condition to a rule",
                "tags": [
                    "Rule"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Rule_SetRuleResourceConditions",
                "parameters": [
                    {
                        "description": "Rule ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "ruleResourceConditions",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.Rule.RuleResourceConditionRequest"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Rule not found"
                    }
                },
                "summary": "Sets all conditions for a rule.\r\nThe collection of conditions supplied in the request is assumed to contain all the conditions of the rule.\r\nNew conditions will be added, existing conditions will be updated, and conditions not included in the request will\r\nbe removed.",
                "tags": [
                    "Rule"
                ]
            }
        },
        "/api/v3/rules/{id}/conditions/{conditionId}": {
            "delete": {
                "consumes": [],
                "operationId": "Rule_RemoveRuleResourceCondition",
                "parameters": [
                    {
                        "description": "Rule ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Condition ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "conditionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Rule or condition not found"
                    }
                },
                "summary": "Removes a condition from a rule",
                "tags": [
                    "Rule"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Rule_UpdateRuleResourceCondition",
                "parameters": [
                    {
                        "description": "Rule ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Condition ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "conditionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "",
                        "in": "body",
                        "name": "ruleResourceCondition",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Rule.RuleResourceConditionRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Rule or condition not found"
                    }
                },
                "summary": "Updates a condition for a rule",
                "tags": [
                    "Rule"
                ]
            }
        },
        "/api/v3/rules/{id}/reset": {
            "post": {
                "consumes": [],
                "operationId": "Rule_ResetRule",
                "parameters": [
                    {
                        "description": "Rule ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Rule not found"
                    }
                },
                "summary": "Resets a rule",
                "tags": [
                    "Rule"
                ]
            }
        },
        "/api/v3/settingcategories": {
            "get": {
                "consumes": [],
                "operationId": "SettingCategory_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.SettingCategory.SettingCategoryResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of SettingCategories",
                "tags": [
                    "SettingCategory"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "SettingCategory_Post",
                "parameters": [
                    {
                        "description": "SettingCategory parameters",
                        "in": "body",
                        "name": "settingCategory",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SettingCategory.SettingCategoryRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "SettingCategory created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created SettingCategory",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a new SettingCategory",
                "tags": [
                    "SettingCategory"
                ]
            }
        },
        "/api/v3/settingcategories/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "SettingCategory_Delete",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SettingCategory not found"
                    }
                },
                "tags": [
                    "SettingCategory"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "SettingCategory_Get",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SettingCategory.SettingCategoryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SettingCategory not found"
                    }
                },
                "tags": [
                    "SettingCategory"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "SettingCategory_Put",
                "parameters": [
                    {
                        "description": "SettingCategory ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "SettingCategory parameters",
                        "in": "body",
                        "name": "settingCategory",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SettingCategory.SettingCategoryRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SettingCategory not found"
                    }
                },
                "summary": "Updates a SettingCategory",
                "tags": [
                    "SettingCategory"
                ]
            }
        },
        "/api/v3/settings/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "Setting_Delete",
                "parameters": [
                    {
                        "description": "Setting ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Setting not found"
                    }
                },
                "summary": "Deletes the specified setting",
                "tags": [
                    "Setting"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "Setting_Get",
                "parameters": [
                    {
                        "description": "Setting ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Setting.SettingResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Setting not found"
                    }
                },
                "summary": "Gets a specific setting",
                "tags": [
                    "Setting"
                ]
            }
        },
        "/api/v3/smartobjects": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "SmartObject_Post",
                "parameters": [
                    {
                        "description": "SmartObject parameters",
                        "in": "body",
                        "name": "smartObject",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObject.SmartObjectRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "SmartObject created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created SmartObject",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Device not found"
                    }
                },
                "summary": "Creates a SmartObject",
                "tags": [
                    "SmartObject"
                ]
            }
        },
        "/api/v3/smartobjects/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "SmartObject_Delete",
                "parameters": [
                    {
                        "description": "SmartObject ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SmartObject not found"
                    }
                },
                "summary": "Removes a SmartObject",
                "tags": [
                    "SmartObject"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "SmartObject_Get",
                "parameters": [
                    {
                        "description": "SmartObject ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObject.SmartObjectResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SmartObject not found"
                    }
                },
                "summary": "Returns a single SmartObject",
                "tags": [
                    "SmartObject"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "SmartObject_Put",
                "parameters": [
                    {
                        "description": "SmartObject ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "SmartObject parameters",
                        "in": "body",
                        "name": "smartObject",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObject.SmartObjectRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SmartObject not found"
                    }
                },
                "summary": "Updates a SmartObject",
                "tags": [
                    "SmartObject"
                ]
            }
        },
        "/api/v3/smartobjects/{id}/resources/read": {
            "get": {
                "consumes": [],
                "operationId": "SmartObject_ReadResources",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SmartObject not found"
                    }
                },
                "summary": "Sends a Read request to all resources for the SmartObject.",
                "tags": [
                    "SmartObject"
                ]
            }
        },
        "/api/v3/smartobjects/{id}/resources/values": {
            "get": {
                "consumes": [],
                "operationId": "SmartObject_GetLatestMeasurementForResourcesAsync",
                "parameters": [
                    {
                        "description": "SmartObject ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObject.SmartObjectResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SmartObject not found"
                    }
                },
                "summary": "Returns a SmartObject with a list of its resources populated with their latest measurement values.",
                "tags": [
                    "SmartObject"
                ]
            }
        },
        "/api/v3/smartobjecttemplates": {
            "get": {
                "consumes": [],
                "operationId": "SmartObjectTemplate_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.SmartObjectTemplate.SmartObjectTemplateListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of SmartObjectTemplates.",
                "tags": [
                    "SmartObjectTemplate"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "SmartObjectTemplate_Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "smartObjectTemplate",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectTemplate.SmartObjectTemplateRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "SmartObjectTemplate created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created SmartObjectTemplate",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a SmartObjectTemplate.",
                "tags": [
                    "SmartObjectTemplate"
                ]
            }
        },
        "/api/v3/smartobjecttemplates/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "SmartObjectTemplate_Delete",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SmartObjectTemplate not found"
                    }
                },
                "summary": "Delete a SmartObjectTemplate.",
                "tags": [
                    "SmartObjectTemplate"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "SmartObjectTemplate_Get",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectTemplate.SmartObjectTemplateResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SmartObjectTemplate not found"
                    }
                },
                "summary": "Get a specific instance of a SmartObjectTemplate.",
                "tags": [
                    "SmartObjectTemplate"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "SmartObjectTemplate_Put",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "smartObjectTemplate",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectTemplate.SmartObjectTemplateRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SmartObjectTemplate not found"
                    }
                },
                "summary": "Updates a SmartObjectTemplate.",
                "tags": [
                    "SmartObjectTemplate"
                ]
            }
        },
        "/api/v3/smartobjecttypes": {
            "get": {
                "consumes": [],
                "operationId": "SmartObjectType_Get",
                "parameters": [
                    {
                        "in": "query",
                        "name": "includeMetrics",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "pagedRequest.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "pagedRequest.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a list of all SmartObjectTypes",
                "tags": [
                    "SmartObjectType"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "SmartObjectType_Post",
                "parameters": [
                    {
                        "description": "SmartObjectType properties",
                        "in": "body",
                        "name": "smartObjectType",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "201": {
                        "description": "SmartObjectType created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created SmartObjectType",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a SmartObjectType",
                "tags": [
                    "SmartObjectType"
                ]
            }
        },
        "/api/v3/smartobjecttypes/import": {
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "SmartObjectType_Import",
                "parameters": [
                    {
                        "description": "",
                        "in": "body",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeImportRequest"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Imports a full set of SmartObjectTypes and ResourceTypes.\r\nTypes that already exist will be updated.",
                "tags": [
                    "SmartObjectType"
                ]
            }
        },
        "/api/v3/smartobjecttypes/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "SmartObjectType_Delete",
                "parameters": [
                    {
                        "description": "SmartObjectType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SmartObjectType not found"
                    }
                },
                "summary": "Removes a SmartObjectType",
                "tags": [
                    "SmartObjectType"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "SmartObjectType_Get",
                "parameters": [
                    {
                        "description": "SmartObjectType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SmartObjectType not found"
                    }
                },
                "summary": "Returns a single SmartObjectType",
                "tags": [
                    "SmartObjectType"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "SmartObjectType_Put",
                "parameters": [
                    {
                        "description": "SmartObjectType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "SmartObjectType properties",
                        "in": "body",
                        "name": "smartObjectType",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.SmartObjectType.SmartObjectTypeRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "SmartObjectType not found"
                    }
                },
                "summary": "Updates a SmartObjectType",
                "tags": [
                    "SmartObjectType"
                ]
            }
        },
        "/api/v3/smartobjecttypes/{id}/resourcetypes/{resourceTypeId}": {
            "delete": {
                "consumes": [],
                "operationId": "SmartObjectType_RemoveResourceTypeForSmartObjectType",
                "parameters": [
                    {
                        "description": "SmartObjectType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "ResourceType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "resourceTypeId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ResourceType not found"
                    }
                },
                "summary": "Removes a ResourceType from a SmartObjectType",
                "tags": [
                    "SmartObjectType"
                ]
            },
            "post": {
                "consumes": [],
                "operationId": "SmartObjectType_AddResourceTypeForSmartObjectType",
                "parameters": [
                    {
                        "description": "SmartObjectType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "ResourceType ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "resourceTypeId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "ResourceType is not reusable"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "ResourceType not found"
                    }
                },
                "summary": "Adds a ResourceType to a SmartObjectType",
                "tags": [
                    "SmartObjectType"
                ]
            }
        },
        "/api/v3/system/silostatus": {
            "get": {
                "consumes": [],
                "operationId": "System_SiloStatus",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.System.SiloStatistics"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "System"
                ]
            }
        },
        "/api/v3/tags": {
            "get": {
                "consumes": [],
                "operationId": "Tag_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Tag.TagResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of Tags in the DeviceNetwork.",
                "tags": [
                    "Tag"
                ]
            },
            "post": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Tag_Post",
                "parameters": [
                    {
                        "description": "Tag properties",
                        "in": "body",
                        "name": "tag",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Tag.TagRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Tag.TagResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Creates a new Tag entity.",
                "tags": [
                    "Tag"
                ]
            }
        },
        "/api/v3/tags/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "Tag_Delete",
                "parameters": [
                    {
                        "description": "Tag ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Tag not found"
                    }
                },
                "summary": "Removes a Tag entity",
                "tags": [
                    "Tag"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "Tag_Get",
                "parameters": [
                    {
                        "description": "Tag ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Tag.TagResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Tag not found"
                    }
                },
                "summary": "Returns a single Tag",
                "tags": [
                    "Tag"
                ]
            },
            "put": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "Tag_Put",
                "parameters": [
                    {
                        "description": "Tag ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Tag parameters",
                        "in": "body",
                        "name": "tag",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Tag.TagRequest"
                        }
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Tag not found"
                    }
                },
                "summary": "Updates a Tag entity.",
                "tags": [
                    "Tag"
                ]
            }
        },
        "/api/v3/tags/{id}/datacollectors": {
            "get": {
                "consumes": [],
                "operationId": "Tag_GetDataCollectors",
                "parameters": [
                    {
                        "description": "Tag ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DataCollector.DataCollectorListResponse]"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Tag not found"
                    }
                },
                "summary": "Returns a paged list of Data Collectors with a Tag.\r\nPermission \"DataCollector\" read.",
                "tags": [
                    "Tag"
                ]
            }
        },
        "/api/v3/tags/{id}/locations": {
            "get": {
                "consumes": [],
                "operationId": "Tag_GetLocations",
                "parameters": [
                    {
                        "description": "Tag ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Location.LocationResponse]"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.ModelValidationError.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Tag not found"
                    }
                },
                "summary": "Returns a paged list of Locations with a Tag.\r\nPermission \"Location\" read.",
                "tags": [
                    "Tag"
                ]
            }
        },
        "/api/v3/tenants": {
            "get": {
                "consumes": [],
                "operationId": "Tenant_Get",
                "parameters": [
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.Tenant.TenantResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "501": {
                        "description": "NotImplemented"
                    }
                },
                "summary": "Returns a paged list of Tenants",
                "tags": [
                    "Tenant"
                ]
            }
        },
        "/api/v3/tenants/adtenant": {
            "get": {
                "consumes": [],
                "operationId": "Tenant_GetTenant",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Gets the current AD tenant",
                "tags": [
                    "Tenant"
                ]
            }
        },
        "/api/v3/tenants/{id}": {
            "get": {
                "consumes": [],
                "operationId": "Tenant_Get",
                "parameters": [
                    {
                        "description": "Tenant ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Tenant.TenantResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Tenant not found"
                    }
                },
                "summary": "Returns a single Tenant",
                "tags": [
                    "Tenant"
                ]
            }
        },
        "/api/v3/tenants/{id}/permissions/{roleName}": {
            "get": {
                "consumes": [],
                "operationId": "Tenant_GetUserGroupPermission",
                "parameters": [
                    {
                        "description": "Tenant ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Role Identity",
                        "in": "path",
                        "name": "roleName",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "additionalProperties": {
                                "enum": [
                                    "Create",
                                    "Read",
                                    "Update",
                                    "Delete",
                                    "All"
                                ],
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Tenant not found"
                    }
                },
                "summary": "Returns a list of Permissions for a Tenant and a Role",
                "tags": [
                    "Tenant"
                ]
            }
        },
        "/api/v3/timeZones": {
            "get": {
                "consumes": [],
                "operationId": "TimeZone_Get",
                "parameters": [
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a list of all available TimeZones in Tz database.",
                "tags": [
                    "TimeZone"
                ]
            }
        },
        "/api/v3/transformertypes": {
            "get": {
                "consumes": [],
                "operationId": "TransformerType_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "pagedRequest.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "pagedRequest.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pagedRequest.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.TransformerType.TransformerTypeListResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a paged list of all Transformer Types",
                "tags": [
                    "TransformerType"
                ]
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "TransformerType_Upload",
                "parameters": [
                    {
                        "description": "Upload an implementation of an ITransformer",
                        "in": "formData",
                        "name": "UploadTransformerType",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "Request",
                        "in": "formData",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerType.TransformerTypeRequest"
                        },
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "201": {
                        "description": "Transformer Type created",
                        "headers": {
                            "Location": {
                                "description": "Location of the newly created Transformer Type",
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.EntityIdResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Uploads a TransformerType DLL, together with\r\na metadata model.",
                "tags": [
                    "TransformerType"
                ]
            }
        },
        "/api/v3/transformertypes/{id}": {
            "delete": {
                "consumes": [],
                "operationId": "TransformerType_Delete",
                "parameters": [
                    {
                        "description": "",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "TransformerType not found"
                    }
                },
                "summary": "Deletes a TransformerType with the specified id.",
                "tags": [
                    "TransformerType"
                ]
            },
            "get": {
                "consumes": [],
                "operationId": "TransformerType_Get",
                "parameters": [
                    {
                        "description": "Transformer identifier",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerType.TransformerTypeResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "TransformerType not found"
                    }
                },
                "summary": "Returns a TransformerType",
                "tags": [
                    "TransformerType"
                ]
            },
            "put": {
                "consumes": [
                    "multipart/form-data"
                ],
                "operationId": "TransformerType_Update",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Upload an implementation of an ITransformer, Optional",
                        "in": "formData",
                        "name": "UploadTransformerType",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "description": "Request",
                        "in": "formData",
                        "name": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.TransformerType.TransformerTypeRequest"
                        },
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "TransformerType not found"
                    }
                },
                "summary": "Uploads a TransformerType DLL, together with\r\na metadata model.",
                "tags": [
                    "TransformerType"
                ]
            }
        },
        "/api/v3/transformertypes/{id}/activate": {
            "put": {
                "consumes": [],
                "operationId": "TransformerType_Activate",
                "parameters": [
                    {
                        "description": "Transformer identifier",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Activates a TransformerType",
                "tags": [
                    "TransformerType"
                ]
            }
        },
        "/api/v3/transformertypes/{id}/approve": {
            "put": {
                "consumes": [],
                "operationId": "TransformerType_Approve",
                "parameters": [
                    {
                        "description": "TransformerType id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "TransformerType not found"
                    }
                },
                "summary": "Approves a TransformerType",
                "tags": [
                    "TransformerType"
                ]
            }
        },
        "/api/v3/transformertypes/{id}/deactivate": {
            "put": {
                "consumes": [],
                "operationId": "TransformerType_Deactivate",
                "parameters": [
                    {
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Deactivates a TransformerType",
                "tags": [
                    "TransformerType"
                ]
            }
        },
        "/api/v3/transformertypes/{id}/revoke": {
            "put": {
                "consumes": [],
                "operationId": "TransformerType_Revoke",
                "parameters": [
                    {
                        "description": "TransformerType id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "TransformerType not found"
                    }
                },
                "summary": "Revokes a TransformerType",
                "tags": [
                    "TransformerType"
                ]
            }
        },
        "/api/v3/user/Responsibilities": {
            "get": {
                "consumes": [],
                "operationId": "User_Responsibilities",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a list of responsibilities that the current user has",
                "tags": [
                    "User"
                ]
            }
        },
        "/api/v3/user/devicenetworks": {
            "get": {
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/x-www-form-urlencoded"
                ],
                "operationId": "User_Get",
                "parameters": [
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.page",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "format": "int32",
                        "in": "query",
                        "name": "settings.pageSize",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "settings.filter",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "in": "query",
                        "name": "settings.sort",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "settings.search",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.General.PagedResponse[Sigma.Sensation.DTO.DeviceNetwork.DeviceNetworkResponse]"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "501": {
                        "description": "NotImplemented"
                    }
                },
                "summary": "Returns a paged collection of the current users DeviceNetworks",
                "tags": [
                    "User"
                ]
            }
        },
        "/api/v3/user/devicenetworks/list": {
            "get": {
                "consumes": [],
                "operationId": "User_GetList",
                "parameters": [
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Sigma.Sensation.DTO.DeviceNetwork.DeviceNetworkResponse"
                            },
                            "type": "array"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns a collection of the current users DeviceNetworks",
                "tags": [
                    "User"
                ]
            }
        },
        "/api/v3/user/thumbnail": {
            "get": {
                "consumes": [],
                "operationId": "User_GetThumbnail",
                "parameters": [
                    {
                        "description": "Device Network Id",
                        "in": "header",
                        "name": "X-DeviceNetwork",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json"
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Downloads the current users thumbnail image from Azure AD",
                "tags": [
                    "User"
                ]
            }
        },
        "/api/v3/version": {
            "get": {
                "consumes": [],
                "operationId": "Version_Get",
                "parameters": [
                    {
                        "description": "Basic Access Authentication",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Sigma.Sensation.DTO.Version.VersionResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "summary": "Returns the current version number Sensation",
                "tags": [
                    "Version"
                ]
            }
        }
    },
    "swagger": "2.0"
}
